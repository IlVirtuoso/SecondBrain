{
	"nodes":[
		{"id":"5ce8567aa4a47ec4","type":"group","x":-1880,"y":-800,"width":5020,"height":5700,"label":"Steady state "},
		{"id":"2ba219e79a4bca20","type":"text","text":"## Arrival theorem \n$\\overline{w}(n)= S_m[1+\\overline{n}_m(n-1)$ this is known as the Arrival theorem that states: \"if a single server has a poisson input process then the arriving customers see the queue as if they were external observers not involved in this operation\".\n\nIn the case of closed queueing networks with Product form solution the same theorem say: when network has n customers, arriving customer see queue i as external observers which monitor the queue in equilibrium when only n-1 customers are is the system","x":1407,"y":-7100,"width":688,"height":300,"color":"1"},
		{"id":"82028708709b698f","type":"text","text":"## Computation of performance figures\nusing explicit expression of $P(\\underline{n})$ we have $p_m(k)= f_m(k)\\frac{g(n-k,m-1)}{g(n,m)}$.\nnote: for the rest of the scheme $p_m(k,n)$ will be simplified in $p_m(k)$ omitting the explicit dependence with the size of the population. Here some perfomance indices that can be calculated:\n- $X_m= \\sum^{n}_{k=1}p_m(k)\\frac{1}{S_m(k)} = V_m \\frac{g(n-1,m)}{g(n,m)}$ \n- $U_m=1-p_m(0)=1- \\frac{g(n,m-1)}{g(n,m)}$ \nnotice that X and U can be also picked from the table produced by the computation of g.\n- $\\overline{n}_m = \\sum^{n}_{k=1}kp_m(k)$ \n- $\\overline{w}_m = \\frac{\\overline{n}_m}{X_m}$ \nIn case of load indipendent station the following can be applied \n- $U_m= X_m S_m = V_m S_m \\frac{g(n-1,m)}{g(n,m)}$ (standard formula)\n- $\\overline{n}_m(n)= U_m(n)[1+\\overline{n}_m(n-1)]$ \n- $\\overline{w}_m(n)= S_m[1+\\overline{n}_m(n-1)]$ ","x":2840,"y":-6433,"width":780,"height":466,"color":"1"},
		{"id":"c3c7a5fe5ac5216d","type":"text","text":"## Computational Scheme for G\nin order for this scheme to work we must have first computed all the values of $f_m(k)$ and of $g(k,m-1)$ , every row of the recursion of g correspond to a specific load of the system and every column correspond to a specific station. The recursion is made first on the loading level (n) and then on the components of the network(m) starting from the upper left corner and ending to the bottom right.\nThe complexity of the computation is in order of : $N^2*M$  in the general case and $N*M$ if all the stations are load indipendent (is much simpler to calculate). \n```\n//Input -> M: int,N: int,V[i]: Array<double>, S[i](k): Array<Array<double>>, ST[i]: Array<SType>\n//Output -> G(k): Array<double>\n\nG[0] = 1.0;\nfor k in 1...N{\n\tG[k]= 0.0;\n}\nfor i in 1...M{\n\tif(ST[i] == LI){\n\t\td = V[i] * S[i][1];\n\t\tfor k in 1...N{\n\t\t\tG[k] = G[k] + d*G[k-1];\n\t\t}\n\t}\n\n\telse{\n\t\tf[0] = 1.0\n\t\tfor k in 1...N{\n\t\t\tf[k] = f[k-1]*V[i]*S[i][k];\n\t\t}\n\t\tfor n in N...1{\n\t\t\tsum = G[n];\n\t\t\tfor k in 1...n{\n\t\t\t\tsum += f[k] * G[n-k];\n\t\t\t}\n\t\t}\n\t}\n}\n```","x":1288,"y":-6480,"width":925,"height":560,"color":"1"},
		{"id":"a9f7caa576607007","type":"text","text":"## The Convolution method\nIn a closed system a state $\\underline{n}$ is feasible if $n_i \\geq 0,i=1\\dots M$  and $\\sum^{M}_{i=1}n_i=N$ the second condition introduce dependency among the stations of the system.\n\nfor convenience let's define the state space of the system with m station and n customers as\n$$\nS(n,m)=\\{(n_1 \\dots n_M | n_i \\geq 0, i=1 \\dots m; \\sum^{m}_{i=1}n_i=n \\}\n$$\ndefine the following auxiliary function $g(n,m)= \\sum_{\\underline{n} \\in S(n,m)} \\prod^{m}_{i=1}f_i(n_i)$  with $g(N,M)=G$ \nwith a little manipulation is possible to prove that \n$$\ng(n,m) = \\sum^{n}_{k=0}f_m(k)g(n-k,m-1) \n$$\nthe definition of g(n,m) can be made recursive introducing the following base conditions\n$g(0,m) = 1(m=0 \\dots )$ and $g(n,0) = 0 (n=1 \\dots)$. This definition is a convolution sum (Convolution algorithm) used for compute the normalization constant in efficient manner. \n","x":1335,"y":-5700,"width":830,"height":480,"color":"1"},
		{"id":"bed9c9c0f301e728","type":"text","text":"## Discouraged arrivals \n$\\lambda(k)=\\frac{\\lambda}{k+1}$ , $\\micro(k)=\\micro \\ \\ k \\geq 1$  from this result we obtain \n\n$p(n)= p(0)\\prod^{n-1}_{k=0}\\frac{\\lambda/(k+1)}{\\micro}=p(0)(\\frac{\\lambda}{\\micro})^n \\frac{1}{n!}$  \n\np(0) can be computed using its explicit expression \n\n$$\np(0)= [1+ \\sum^{\\infty}_{n=1}(\\frac{\\lambda}{\\micro})^n \\frac{1}{n!}]^{-1}=e^\\frac{-\\lambda}{\\micro}\n$$  \nand then \n\n$$\np(n)= \\frac{(\\lambda/\\micro)^n}{n!}e^\\frac{-\\lambda}{\\micro} \n$$\n\n","x":3320,"y":-3671,"width":645,"height":371,"color":"2"},
		{"id":"66533552c4f95712","type":"text","text":"## performance indices\n\n- $X= \\sum^{N}_{n=1}p(n)\\micro(n)$ \n- $\\bar{n} = \\sum^{N}_{n=1}np(n)$ \n- $\\bar{W}=\\frac{\\bar{n}}{X}$ \n","x":1868,"y":-3320,"width":365,"height":178,"color":"3"},
		{"id":"4150740c32b05c3d","type":"text","text":"## Solution: load dependent rates \nthe previous solution provide a new interesting relationship \n$$\n\\begin{equation}\n\\begin{cases}\np(n) = p(0)\\prod^{n}_{k=1}\\frac{\\lambda(k-1)}{\\micro(k)} \\ \\ \\ 0<n \\leq N \\\\ \n\\\\\np(0)= (1+\\sum^{N}_{n=1}[\\prod^{n}_{k=1}\\frac{\\lambda(k-1)}{\\micro(k)}])^{-1}\n\\end{cases}\n\\end{equation}\n$$","x":1760,"y":-2910,"width":580,"height":297,"color":"3"},
		{"id":"d6a9b3f6d5709b11","type":"text","text":"## Generalization \nsuppose that measurement of service rates change for possible values of the state k. The result obtained can be summarized in the following manner:\n\n- Discouraged arrivals\n- Multiple Server queue \n- infinite server queue \n- queue with a finite waiting room\n- queue with fixed population","x":2600,"y":-2613,"width":440,"height":339,"color":"5"},
		{"id":"7f55ca3ee4cdd46e","type":"text","text":"## Solution: homogeneous \narrival rates are independent from the state of the system \n$\\lambda(0)= \\lambda(1)...=\\lambda(N-1)=\\lambda$\nservice rates are also indipendent of the state of the system \n$\\micro(1)=\\micro(2)...=\\micro(N)=\\micro$\n\nwe can define $\\rho=\\frac{\\lambda}{\\micro}$ and conclude that $p(n)= \\frac{1-\\rho}{1-\\rho^{N+1}}\\rho^n \\ \\ \\ 0\\leq n \\leq N$  \n","x":1760,"y":-2307,"width":580,"height":267,"color":"2"},
		{"id":"ccae7520e9d46438","type":"text","text":"## Asymptotic homogeneous performance indices\n\nwhen $\\rho < 1$ taking the limit for N that goes to $\\infty$ we observe that the fraction of time spent by the system in each of its possible states assume the connotation of a probability\n$p(n)= (1-\\rho)\\rho^n$ \n\nwe can then derive \n- throughput $X= \\lambda$ \n- average queue length $\\bar{n}=\\frac{\\rho}{1-\\rho}$ \n- average waiting time $\\bar{W} = \\frac{1}{\\micro(1-\\rho)}$ ","x":1730,"y":-1920,"width":640,"height":320,"color":"1"},
		{"id":"96a3e3bf2f758aa4","type":"text","text":"## Computing normalization constant in closed systems \n\nThe indipendece of $N_i$ doesn´t apply for closed network. In closed systems there aren't new arrivals, so the only possibility are customers that move from one station to another. The global balance equations assumes a much simpler form. \n$$\n\\sum^{M}_{i,j=1}P(\\underline{n_{ij}})\\frac{q_{ij}\\delta(n_j)}{S_i(n_i+1)}=P(\\underline{n})\\sum^{M}_{i=1}\\frac{\\delta(n_i)}{S_i(n_i)}\n$$\n\nthe formal definitions remains the same.  for G: $P(\\underline{n}) = \\frac{1}{G}\\prod^{M}_{i=1}f_i(n_i)$  where \n$$\nf_i(k)= \\begin{cases}\n1 \\ \\ \\ k=0 \\\\\nV_iS_i(k)f_i(k-1) \\ \\ k>0\n\\end{cases}\n$$\nand $G = \\sum_\\underline{n}\\prod^{M}_{i=1}f_i(n_i)$ ","x":1320,"y":-4920,"width":860,"height":410,"color":"1"},
		{"id":"ae28ccf4bec6f2cc","type":"text","text":"## Solving transition balance \nassume all the $V_i$ are computed so that we can assume $\\lambda_i=\\begin{cases}\\lambda V_i \\ \\ \\ open\\ system \\\\ V_i \\ \\ \\ closed\\ system \\end{cases}$ , where $\\lambda$ represent the total arrival rate of external customers to the system.  Define also the following function \n$$\nf_i(k)= \\begin{cases}\n1 \\ \\ \\ k = 0 \\\\\n\\lambda_iS_i(k)f_i)k-1 \\ \\ \\ k>0\n\\end{cases}\n$$\nis it possible to show that the time spent by the system in each of its states is $$P(\\underline{n})= \\frac{1}{G} \\prod^{M}_{i=1}f_i(n_i)$$\nThis is called product form solution , G is a normalization constant defined in this way \n$$\n1= \\sum_{\\underline{n}}P(\\underline{n}) = \\frac{1}{G}\\sum_{\\underline{n}}\\prod^{M}_{i=1}f_i(n_i) \\rightarrow G= \\sum_{\\underline{n}}\\prod^{M}_{i=1}f_i(n_i)\n$$\n","x":60,"y":-4580,"width":760,"height":460,"color":"1"},
		{"id":"d2d0757ccb12add6","type":"text","text":"## Computing normalization constant in open systems \n\nDenote with $N_i,i=1,...,M$ the maximum number of customers observed at station i during all observation (0,T].\nIn the case of open systems those $N_i$ can be arbitrarily large (and in fact grow to infinity). This means that there is not dependency among $N_i$ so the normalization constant G becomes .\n$$\nG=\\sum_\\underline{n}\\prod^{M}_{i=1}f_i(n_i) = \\prod^{M}_{i=1}\\sum^{N_i}_{i=1}f_i(n_i) = \\prod^{M}_{i=1}G_i\n$$\nand then the product form solution become \n$$\nP(\\underline{n}) = \\frac{1}{G} \\prod^{M}_{i=1}f_i(n_i)=\\prod^{M}_{i=1}\\frac{f_i(n_i)}{G_i} = \\prod^{M}_{i=1}p_i(n_i) \n$$\n","x":1320,"y":-4209,"width":860,"height":440,"color":"1"},
		{"id":"b83ea790bafa9577","type":"text","text":"## Simplify state transition balance equations\nlet's introduce an indicator function defined in this way $\\sigma(n)= \\begin{cases}1 \\ \\ \\ n>0 \\\\0 \\ \\ \\ n=0\\end{cases}$ \nusing $\\lambda_{0j}$ as the external arrival rate directed toward the station of index j\nWith all those hypothesis the transition balance equations assume the following form \n$$\n\\sum^{M}_{i,j=1}P(\\underline{n}_{ij}) \\frac{q_{ij}}{S_i(n_i+1)}\\sigma(n_j) + \\sum^{M}_{j=1}P(\\underline{n}_{0j})\\lambda_{0j}\\sigma(n_j) + \\sum^{M}_{i=1}P(\\underline{n}_{i0})\\frac{q_{i0}}{S_i(n_i+1)}= P(\\underline{n})[\\sum^{M}_{i=1}\\frac{\\sigma(n_i)}{S_i(n_i)} +  \\sum^{M}_{j=1}\\lambda_{0j}]\n$$\n\n","x":60,"y":-3864,"width":760,"height":288,"color":"3"},
		{"id":"b3f5033f317f59e0","type":"text","text":"## Infinite server queue \n$\\lambda(k) = \\lambda$ , $\\micro(k) = k \\micro$ \ndistribution of number of customers \n$$\np(n)=p(0) \\prod^{n-1}_{k=0}\\frac{\\lambda}{(k+1)\\micro} = p(0)(\\frac{\\lambda}{\\micro})^n \\frac{1}{n!} \n$$\na simple expression for p(0) can be obtained for $N \\rightarrow \\infty$ \n$p(0) = [1+\\sum^{\\infty}_{n=1}(\\frac{\\lambda}{\\micro})^n \\frac{1}{n!}]^{-1} = e^{-\\lambda/\\micro}$ \nand the general expression becomes then \n$$\np(n) = \\frac{(\\lambda/\\micro)^n}{n!}e^\\frac{-\\lambda}{\\micro}\n$$","x":3320,"y":-3220,"width":645,"height":340,"color":"2"},
		{"id":"e7cbfa1e8e4e91da","type":"text","text":"## Simplify transition rates \nusing\n- $C(n,n+1)= A(n)$ = # arrivals observed when the system is in state n; $A(N)=0$\n- $C(n,n-1)=C(n)$ = # completions observed when the system is in state n; $C(0)=0$\n\nwe can generalize to \n$r(n,n+1)= \\frac{A(n)}{T(n)}= \\lambda(n)$\n$r(n,n-1)= \\frac{C(n)}{T(n)}= \\micro(n)$ ","x":-160,"y":-2910,"width":720,"height":350,"color":"2"},
		{"id":"9971edf283b6f764","type":"text","text":"## Multiple server queue \n$\\lambda(k) = \\lambda$  , $\\micro(k)= \\begin{equation} \\begin{cases}  k \\micro \\ \\ \\ 0 \\leq k \\leq m \\\\ m \\micro \\ \\ m<k \\end{cases} \\end{equation}$   \nthe distribution of the number of customers is then \n$$\np(n) = \n\\begin{equation}\n\\begin{cases}\np(0)\\prod^{n-1}_{k=0} \\frac{\\lambda}{(k+1)\\micro} = p(0)(\\frac{\\lambda}{\\micro})^n \\frac{1}{n!} \\ \\ \\ 0 \\leq n \\leq m \\\\\n\\\\\np(0) \\prod^{m-1}_{k=0} \\frac{\\lambda}{(k+1)\\micro} \\prod^{n-1}_{k=m} \\frac{\\lambda}{m \\micro} = p(0)(\\frac{\\lambda}{\\micro})^n \\frac{1}{m!m^{n-m}} \\ \\ \\ m<n\n\\end{cases}\n\\end{equation}\n$$\np(0) can be derived from normalization, or obtained taking the limit $N \\rightarrow \\infty$ under the assumption that $\\frac{\\lambda}{m \\micro} < 1$ ","x":3320,"y":-2820,"width":645,"height":292,"color":"2"},
		{"id":"e280cc6a468927d5","type":"text","text":"## Result\nthe system can now be rewritten as\n$$\n\\begin{equation}\n    \\begin{cases}\n    p(n)\\micro(n)=p(n-1)\\lambda(n-1) \\ \\ \\ 0<n \\leq N \\\\\n    \\\\\n    \\sum_np(n)=1\n    \\end{cases}\\\n\\end{equation}\n$$\n\nnb this is the final form, you can take the other system and perform the substitution to see the intermediate one","x":840,"y":-2604,"width":605,"height":297,"color":"1"},
		{"id":"80e0667087246610","type":"text","text":"## queue with a finite waiting room\n\n$\\lambda(k) = \\begin{cases} \\lambda \\ \\ \\ 0 \\leq k \\leq B \\\\ 0 \\ \\ \\ k>B\\end{cases}$  , $\\micro(k)= \\micro$ \nwe obtain \n$$\np(n) = \\begin{cases}\np(0) \\prod^{n-1}_{k=0} \\frac{\\lambda}{\\micro} = p(0) (\\frac{\\lambda}{\\micro})^n \\ \\ \\ 0 \\leq n \\leq B \n\\\\\n0\n\\end{cases}\n$$\nin this case $p(0)= \\frac{1-\\lambda/\\micro}{1-(\\lambda/\\micro)^{B+1}}$\nand the general expression becomes \n$$\np(n) = \\begin{cases}\n\\frac{1-\\lambda/\\micro}{1-(\\lambda/\\micro)^{B+1}} \\ \\ \\ 0 \\leq n \\leq B\n\\\\0 \\ \\ \\ n> B\n\\end{cases}\n$$\n\n","x":3320,"y":-2443,"width":645,"height":340,"color":"2"},
		{"id":"39ad710a054597f5","type":"text","text":"## Single queue with fixed number of customers\n$\\lambda(k)= \\begin{cases}(N-k)\\lambda \\ \\ \\ 0 \\leq k \\leq N \\\\ 0 \\ \\ \\ k > N\\end{cases}$, $\\micro(k)= \\micro$ \n we have \n$$\np(n)= \\begin{cases}\np(0) \\prod^{n-1}_{k=0}\\frac{(N-k)\\lambda}{\\micro} = p(0)(\\frac{\\lambda}{\\micro})^n \\frac{N!}{(N-n)!} \\ \\ \\ 0 \\leq n \\leq N \\\\\n0 \\ \\ \\ n > N\n\\end{cases}\n$$\nfrom which we can derive \n$p(0) = [1+\\sum^{N}_{n=1}(\\frac{\\lambda}{\\micro})^n \\frac{N!}{(N-n)!}]^{-1}$  ","x":3320,"y":-2000,"width":645,"height":340,"color":"2"},
		{"id":"47843eaaace05584","type":"text","text":"## Mean value analysis \nLet's group all the recurrent expression\n-  $\\overline{w}_i(n) = S_i[1+\\overline{n}_i(n-1)]$\n- $U_i(n)=X_i(n)S_i$ \n- $\\overline{n}_i(n)= U_i(n)[1+\\overline{n}_i(n-1)]$ \nThe missing $X_i$ equation can be derived by using the little's law \n- $X_{ref}(n)= \\frac{n}{\\sum^{M}_{j=1}V_j \\overline{w_j}(n)}$ (derived from the definition of $Y_k(n)$)   \n- $X_i(n)= V_i X_{ref}(n)$ \n","x":1407,"y":-7620,"width":688,"height":320,"color":"1"},
		{"id":"c6b513b281a028cf","type":"text","text":"## MVA for LI stations \n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tw[i][k] = S[i]*(1+n[i][k-1]);\n\t}\n\tsum = 0;\n\tfor i in 1...M{\n\t\tsum += V[i]*w[i][k];\n\t}\n\tXref = k/sum;\n\tfor i in 1...M{\n\t\tX[i][k]= V[i]*Xref;\n\t\tU[i][k]=S[i]*X[i][k];\n\t\tn[i][k]=U[i][k]*(1+n[i][k-1]);\n\t}\n}\n\n```","x":1441,"y":-8480,"width":620,"height":640},
		{"id":"6f94b72d86303cce","type":"text","text":"## Summary of equations\n\n$$\n\\begin{equation}\n    \\begin{cases}\n      p(1)r(1,0)=p(0)r(0,1)\\\\\n      \\\\\n      p(n-1)r(n-1,n)+p(n+1)r(n+1,n)=p(n)[r(n,n+1)+r(n,n-1)]\\ \\ \\ \\ 0<n<N \\\\\n      \\\\\n      p(N-1)r(N-1,N)=p(N)r(N,N-1) \\\\\n      \\\\\n      \\sum_np(n)=1\n    \\end{cases}\\\n\\end{equation}\n$$","x":-160,"y":-2434,"width":680,"height":254,"color":"1"},
		{"id":"e1d6a29195272637","type":"text","text":"## Intermediate behavior\n$T(n)$ = total time spent by the system in state $\\underline{n}$ during observation period, with $\\sum T(n) = T$. \nLet $P(n)= T(n)/T$ be the fraction of time spent by the system in state $\\underline{n}$. \n\nthe set of fractions of time spent by the system in each state in $S(M)$ or $\\{P(\\underline{n}), \\underline{n} \\in S(M)\\}$ is called \"distribution of the fractions of time spent by the system in its states\". The objective is to derive P(n) not through direct measures but by using the parameters of the model. \n\nlet $C(\\underline{n}, \\underline{m})$ be # of direct transition made by the system from state $\\underline{n}$ to state $\\underline{m}$. In our measurement we can't observe transition within the same state so $C(\\underline{n},\\underline{n}) = 0$ for any n\n\n","x":-1980,"y":-2660,"width":620,"height":400,"color":"1"},
		{"id":"c9ee6b214af165d0","type":"text","text":"## Operational equilibrium \nalso in this case $A=C$ is required for every station. The number of departures and arrivals must be $n_i(0)= n_i(T) \\ \\ \\  i=1...M$.\n\nthis means that the op eq condition is satisfied every time the measurement start with a state and ends with that state. For a single server in isolation then \n$$\n\\sum_kC(\\underline{k},\\underline{n}) = \\sum_mC(\\underline{n},\\underline{m}) \\ \\ \\ \\forall \\underline{n}\n$$\n\nthen we can say \"the flow balance condition among customer of a system is equivalent to balancing the number of transition among the  state of the system\" \n\nDefine now the transition rate from n to m as $r(\\underline{n},\\underline{m})= \\frac{C(\\underline{n},\\underline{m})}{T(\\underline{n})}$ . \n$T(\\underline{n})=0$ implies $C(\\underline{n}, \\underline{m})=0$. Now we can introduce those variables in balance equation \n$$\n\\sum_\\underline{k} P(\\underline{k})r(\\underline{k},\\underline{n}) = P(\\underline{n}) \\sum_\\underline{m}r(\\underline{n},\\underline{m}) \n$$\nthe definition of P(n) allows to add a normalization equation \n$\\sum_\\underline{n}P(\\underline{n})=1$ ","x":-2880,"y":-2765,"width":560,"height":610,"color":"1"},
		{"id":"32e85f7af7bc55e0","type":"text","text":"## Mean value analysis with delay stations\nin the case of delay station $\\overline{w}_i(n)= Z$ always. The algorithm can so modified observing that \n- $\\overline{w}_i(n)= \\begin{cases}Z_i \\ \\ \\ delay\\ station \\\\ S_i[1+\\overline{n}_i(n-1)] \\ \\ \\ LI \\  station \\end{cases}$  \n- $\\overline{n}_i(n)= \\begin{cases}Z_iX_i(n) \\ \\ \\ Delay \\ Station \\\\ U_i(n)[1+\\overline{n}_i(n-1)] \\ \\ \\  LI \\end{cases}$ \n- $U_i(n)= \\begin{cases}\\frac{\\overline{n}_i(n)}{n} \\ \\ \\ DI \\\\ X_i(n)S_i \\ \\ \\ LI \\end{cases}$ \n","x":2520,"y":-7605,"width":720,"height":290,"color":"1"},
		{"id":"6077b63e1364d508","type":"text","text":"## MVA for LI&D stations \n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>, ST[i]: Array<StationType>,Z[i] : Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tif(ST[i] == \"D){w[i][k] = Z[i]}\n\t\telse{w[i][k] = S[i]*(1+n[i][k-1]);}\n\t}\n\tsum = 0;\n\tfor i in 1...M{\n\t\tsum += V[i]*w[i][k];\n\t}\n\tXref = k/sum;\n\tfor i in 1...M{\n\t\tX[i][k]= V[i]*Xref;\n\t\tif(ST[i] == \"D){\n\t\t\tn[i][k] = Z[i]*X[i][k];\n\t\t\tU[i][k] = n[i][k]/k;\n\t\t}\n\t\telse{\n\t\tU[i][k]=S[i]*X[i][k];\n\t\tn[i][k]=U[i][k]*(1+n[i][k-1]);\n\t\t}\n\t}\n}\n\n```","x":2570,"y":-8580,"width":620,"height":840},
		{"id":"2534d2556ecf65f8","type":"text","text":"## Mean value analysis with  Load dependent stations\n\nconsider the expression for the queue length distribution $p_m(k,n)= f_m(k)\\frac{g(n-k,m-1)}{g(n,m)}$ , recall: the explicit expression of the service function $f_m(k)=V_mS_m(k)f_m(k-1)$  and throughput $X_m(n)= V_m \\frac{g(n-1,m)}{g(n,m)}$  , substituting in the expression of queue length distribution we obtain  $p_m(k,n)= X_m(n)S_m(k)p_m(k-1,n-1)$ (intermediate passage omitted). since expression of $X_m$ hold for any index i we can use that expression for any index. The new recursive expression let us to obtain: \n\n- $\\overline{w}_i(n) = \\frac{\\overline{n}_i}{X_i(n)} = \\frac{\\sum^{n}_{k=1}kp_i(k,n)}{X_i(n)} = \\sum^{n}_{k=1}kS_i(k)p_i(k-1,n-1)$ latter passage with queue length distribution \n- $X_{ref}(n)= \\frac{n}{\\sum^{M}_{j=1}V_j \\overline{w}_j(n)}$ \n- $X_i(n)= V_iX_{ref}(n)$ \n- $\\overline{n}_i(n)=\\overline{w}_i(n) * X_i(n)$ \n- $p_i(k,n)= X_i(n)S_i(k)p_i(k-1,n-1)$\n- $p_i(0,n)= 1- \\sum^{n}_{k=1}p_i(k,n)$ \n- $U_i(n)= 1-p_i(0,n)= \\sum^{n}_{k=1}p_i(k,n)$ \n\nembedding these equation is easy, at each step the queue can be computed as $p_i(0,n)=1.0-U_i(n)$  and is initialized $p(0,0)=1.0$ ","x":3860,"y":-7707,"width":920,"height":494,"color":"1"},
		{"id":"4c392e6eef534737","type":"text","text":"## MVA for LD stations \nnot usable when the bottleneck station is load dependent.\n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>, p[i][k][n]: Array<Matrix<2,double>>\n\ncum = 0.0;wait=0.0;y=0.0\nfor i in 1...M{\n\tp[i](0,0) = 1.0;\n\tfor j in 1...N{p[i](j,0) = 0.0;}\n}\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tfor j in 1...k{\n\t\t\twait += j * S[i][j]*p[i](j-1,k-1);\n\t\t\tw[i][k]=wait;\n\t\t}\n\t}\n\tfor i in 1...M{\n\t\tY+= V[i]*w[i][k];\n\t}\n\tXref= k/Y;\n\tfor i in 1...M{\n\t\tX[i][k] = V[i]*Xref;\n\t\tfor j in 1...k{\n\t\t\tp[i](j,k)=X[i][k]*S[i][j]*p[i](j-1,k-1);\n\t\t\tcum += p[i](j,k);\n\t\t}\n\t\tp[i](0,k) = 1.0-cum;\n\t\tu[i][k]=cum;\n\t\tn[i][k]=X[i][k]*w[i][k];\n\t}\n}\n\n\n```","x":3955,"y":-8700,"width":730,"height":880},
		{"id":"5a778c5710a88148","type":"text","text":"## The BCMP theorem\nA queueing network has a product form solution if it satisfies the following criteria:\n- The network has a finite number of stations \n- Customer belong to an arbitrary and finite number of closed or open classes and can change class memberships\n- Routing probability are defined for each class identified by a DTMC (markov chain) (so as a matrix)\n- The station of the network may be of 4 different types:\n\t- FCFS with negative exponential distribution of service times\n\t- LCFS with a rationale laplace transform distribution of service times \n\t- Processor Sharing with a rationale laplace transform distribution of service times \n\t- Infinite server with a rationale laplace transform distribution of service times\n\nFCFS is commonly associated to negative exponential distribution, this is the standard first come first served policy.\n\nLCFSpr (preemptive resume) last come first served: studied as a simple approximation of server undergoing high priority interruptions. When a new customer join a non empty queue, the customer in service is interrupted, pushed into an input stack and resumed later.\n\nPS Process sharing discipline: represent a limit for the round robin discipline as its quantum size goes to 0\n\nIS infinte server discipline makes the server equivalent to a delay station.","x":-29,"y":-5540,"width":939,"height":560},
		{"id":"9ae8e6870332cde0","type":"text","text":"## Intermediate state\nsteady state analysis is not enough to understand the behavior of the system in intermediate conditions, additional measure are needed. \nThe state of the system can be represented with a vector $\\underline{n} = (n_1,n_2,...,n_m)$  $n_i \\geq 0$  $i=1,2,...,M$  the set of all the possible state is called state space $S(M)$     ","x":-760,"y":-1440,"width":680,"height":220,"color":"5"},
		{"id":"0d7bd16152310260","type":"text","text":"## flow balance\n$A = C$  -> flow balance| operational equilibrium\n$U= \\lambda*S$ ","x":-1020,"y":-135,"width":400,"height":150,"color":"3"},
		{"id":"f013210ab3c0b8bb","type":"text","text":"## Saturation\n$U \\leq 1$ -> $X \\leq  \\frac{1}{S}$  and $\\lambda \\leq \\frac{1}{S}$ \nif $X = \\frac{1}{S}$  the system is saturated","x":-1060,"y":130,"width":321,"height":140,"color":"3"},
		{"id":"51af6783ee91e15d","type":"text","text":"## Bottleneck Analysis\nusing $V_i$ and $S_i$  we can observe the behaviour of the system under stress condition ($\\lambda$ grow in case of open system and $N$ grow  in case of closed system).  ","x":-1026,"y":1571,"width":546,"height":189,"color":"2"},
		{"id":"5ae4eaaad9fe5407","type":"text","text":"## Response time: Open \n\n$\\Omega_i=V_i\\bar{w_i}$ (i=1,...,M) average time spent by customer in queue i\n$R = \\sum^{M}_{i=1}\\Omega_i$  average response time of the system (or average response time spent by customer in the system).\n\nusing little law's\n$\\bar{n}=\\lambda R=\\sum^{M}_{i=1}X_i\\bar{w_i}= \\sum^{M}_{i=1}{\\lambda \\Omega_i}=\\sum^{M}_{i=1}\\bar{n_i}$ \n","x":760,"y":1820,"width":519,"height":240,"color":"3"},
		{"id":"76a7e114f52e75a2","type":"text","text":"## Response time: Closed\nN customers in system, index i=0 is meaningless and visits must be computed using a generic index k inside the system (arbitrary station) so $\\Omega_i$ are dependent on k.\n\n$R_k = \\sum^{i=1,i \\neq k}_{M}{\\Omega_i}$  average amount of time taken by customers to return to station k (Response time).\n\n$Y_k = \\bar{w_k}+R_k = \\sum^{M}_{i=1}{\\Omega_i}$  average amount of time take by a customer to make a complete tour in the system starting from station k (cycle time).\n\nif we generalize taking in consideration explicitly the station K\n$V_j^{[k]} = \\frac{C_j}{C_k} = \\frac{X_j}{X_k} = \\sum^{M}_{i=1}V_i^{[k]}q_{i,j}$          $j=1,...,m$    \nwe can relate this notation referring to a second station h\n$V_j^{[h]} = \\frac{C_j}{C_h} = \\frac{V_j^{[k]}}{V_h^{[k]}}$              $j,h,k=1,...,M$ \nand for this chosen station we can compute \n$Y_k = \\sum^{M}_{i=1}{\\Omega_i}^{[k]} = \\sum^{M}_{i=1}{V_i^{[k]}}\\bar{w_i}$  \nand also \n$Y_h = \\sum^{M}_{i=1}\\Omega_i^{[h]} = Y_k\\frac{1}{V_h^{[k]}}$  and obtaining the general form\n$R_h = Y_h - \\bar{w_h}$ \n\n","x":1560,"y":1820,"width":540,"height":580,"color":"3"},
		{"id":"204cfc62bd11bc51","type":"text","text":"## Bottleneck Analysis: open systems\n$S_i$ and $V_i$ are independent of $\\lambda$. The same is not true for $X_i$ and $U_i$ so they can be represented as function of $\\lambda$ --> $X_i(\\lambda)$ and $U_i(\\lambda)$. For the Consistency Law we have $\\frac{X_i(\\lambda)}{X_j(\\lambda)} = \\frac{V_i}{V_j}$ and $\\frac{U_i}{U_j} = \\frac{V_iS_i}{V_jS_j}$ , independent from $\\lambda$. it follows then \n$\\lambda_i = \\lambda_0V_i$ and in op.eq $\\lambda \\leq \\frac{1}{S_i}$ (i=1,...,M).  And so $X_i(\\lambda) = \\lambda_i = \\lambda_0V_i$ and $U_i(\\lambda) = X_i(\\lambda)S_i$ .\n\nDenote with b the first station to reach 1 of utilization. This station is the Bottleneck of the system  and is used to identify the value of $\\lambda_{max}$ after which the system loses the operation eq. property. If $\\lambda>\\lambda_{max}$ the system reach a point in which the queues grow to infinity and the system becomes unstable. Since $\\frac{U_i(\\lambda)}{U_j(\\lambda)}$ is fixed for any pair i,j then the station that becomes saturated first is whose the utilization becomes the largest in any loading conditions. Formally: $\\frac{U_b(\\lambda)}{U_i(\\lambda)}=\\frac{V_bS_b}{V_iS_i}=\\frac{D_b}{D_i} > 1$, in order to identify the index of the bottleneck $V_bS_b=max_i(V_iS_i)$ , then we can state the maximum throughput of the bottleneck station $X_b^{[max]}(\\lambda)=\\frac{U_b^{[max]}(\\lambda)}{S_b} = \\frac{1}{S_b}$ --> $\\lambda_{max}=\\frac{1}{V_bS_b}$ ","x":-1438,"y":1960,"width":598,"height":540,"color":"1"},
		{"id":"e3843ff935cf180f","type":"text","text":"## State balance of a single queue\nassume that the state are defined on the base of the number of customer waiting in the queue with states k,m,n.\n\nlet $C(m,n)$ = number of transitions from state m to state n, then the state balance equation is $\\sum_{k}C(n,k)= \\sum_mC(n,m)$ .  This holds in general for all state but for first and last, except when in Operational equilibrium, then it holds for all states.\n\n![[Pasted image 20231006125755.png]]","x":-1040,"y":-2180,"width":620,"height":340,"color":"2"},
		{"id":"f1968be66e6acbc2","type":"text","text":"## State balance measures\n\n$r(n,m)=\\frac{C(n,m)}{T(n)}$ => transition rate from m to n, while n is occupied\n$p(n)=\\frac{T(n)}{T}$ fraction of time spent by the system with n customers waiting\n\nthe state balance equation can be rewritten with $\\sum_kp(k)r(k,n)=p(n)\\sum_mr(n,m) \\space |\\forall n$    ","x":-1040,"y":-2560,"width":620,"height":271,"color":"1"},
		{"id":"f79be80e8176bda7","type":"text","text":"## State balance of a network of queues\nset of all possible states $S(M) = \\{\\underline{n} =(n_1,n_2,...,n_M), n_i \\geq 0 i=1,2,...,M\\}$  \n\n$\\underline{k}, \\underline{m}$ and $\\underline{n}$ will be generic states.","x":-1980,"y":-2040,"width":620,"height":171,"color":"5"},
		{"id":"7ba10d4143bcda02","type":"text","text":"## a grahical analysis\n![[Pasted image 20231004122927.png]]\nthe slanted asymptote intersect the ordinate axis at -Z the abscissa at $N_T^*=\\frac{Z}{V_bS_b}$ .  The horizontal asymptote at the saturation point $N^*=\\frac{Z}{V_bS_b} + \\frac{R(1)}{V_bS_b} = N_T^* +N_S^*$ .\nwhere $N^*_T$ is the average number of thinking terminals in saturation condition. \n$N_S^* = \\frac{R_0(1)}{V_bS_b}= \\frac{\\sum^{i=1}_{M}{V_iS_i}}{V_bS_b}$ represent the minimum number of terminals that has to be connected in order to observe queueing in the Central server.  ","x":1188,"y":4400,"width":717,"height":480,"color":"2"},
		{"id":"6301506dc772fe94","type":"text","text":"## Beyond $\\lambda_{max}$ (asymptotic analysis)\nin certain cases is possible for $\\lambda$ to grow beyond $\\lambda_{max}$. This may yield to saturation also the other stations that have $V_iS_i < V_bS_b$ (depend on topology). 2 cases can arise:\n1) $V_iS_i > V_jS_j$  $\\forall j > i; i,j=1,2,...,M$  in this network b = 1 and only the first station can have $U = 1$ \n2) $V_iS_i \\leq V_jS_j$   $\\forall j > i; i,j=1,2,...,M$  in this network b=M and all the queues can have $U=1$  if $\\lambda$ becomes sufficiently large. \n\nin both cases $X \\leq \\frac{1}{S_b}$  independently of $\\lambda$\n\n![[Pasted image 20231002213059.png]]","x":-1438,"y":2680,"width":598,"height":400,"color":"2"},
		{"id":"f79a971e4f3ddb59","type":"text","text":"## Case of infinite server \ninfinite Server stations are such that their service function is $S_i(h)= \\frac{S_i(1)}{h} = \\frac{Z}{h}$. Because of this, the load dependent service speeds are non-decreasing, but also not limited so that these station cannot be bottlenecks because their limit service times are equal to 0. **They must be skipped during the search of a bottleneck**.\n\n","x":1160,"y":2920,"width":740,"height":197,"color":"1"},
		{"id":"25245c0f354560b7","type":"text","text":"## Case of queues with load dependent behaviour\nusing $S_i(1) \\geq S_i^{[min]} = \\lim_{h \\rightarrow \\infty} S_i(h)$ , the discussion can now be generalized in $Y(1) = \\sum^{i=1}_{M}V_iS_i(1)$ and $Y(N)=NV_bS_b^{[min]}$  the problem now is that $Y(1) = \\sum_{i=1}^{M}V_iS_i(1)$ can be larger that the minimum cycle of the network\n\n#needclarify\nnote: is not clear what min is referring to","x":200,"y":3060,"width":680,"height":210,"color":"2"},
		{"id":"b7f82509894a24e0","type":"text","text":"## BA: Central server time sharing system \n![[Pasted image 20231003212636.png]]\n\nLet's study the case of a central server time sharing composed by N terminals connected to the central server. Assume that Z represent the delay associated with the terminal station and that $S_i$ and $V_i$ are constant. What would be the impact on the behavior if we connect more terminals. The response can be found using the delay station as reference to calculate the performance of the others in the systems.\n\nin this case we have $Y(N) = Z+R(N)$  where R is the response time with N terminals connected. The slanted asymptote for $X(N)$ is given by $X'(N)= \\frac{N}{Y(1)} = \\frac{N}{[Z+R(1)]}$ on the other hand $X$ is bounded by horizontal asymptote $\\lim_{N \\rightarrow \\infty}X_0(N)=\\frac{1}{V_bS_b}$.\n\nThe saturation point is $N^*= \\frac{Z}{V_bS_b}+\\frac{R(1)}{V_bS_b}$ considering cycle and response time we have \n$Y(N)=\\frac{N}{X(N)} \\geq \\frac{N}{1/V_bS_b} = NV_bS_b$ consequently the slanted asymptote for the response time is $R'(N)= N(V_bS_b) - Z$ ","x":1212,"y":3407,"width":668,"height":713,"color":"1"},
		{"id":"42008c372ee66c82","type":"text","text":"## little formula without op eq\n\n$\\bar{n} = \\frac{G(T)}{T}$  and $\\bar{w} = \\frac{G(T)}{A(T)}$  --> $\\bar{n} = \\frac{A(T)}{G(T)} \\bar{w} X$ ","x":920,"y":-378,"width":460,"height":158,"color":"5"},
		{"id":"8f67c93e0b3bfca6","type":"text","text":"## Little's formula\n\n$\\bar{n} = X*\\bar{w}$ -> waiting law\n$\\bar{n} = \\lambda*\\bar{w}$ -> little's formula\n\n![[Pasted image 20231001123801.png]]\n","x":0,"y":-280,"width":660,"height":480,"color":"1"},
		{"id":"b55e63ed49ae1888","type":"text","text":"## Transition quantities\n$C_i$ number of departures from station i\n$C_{i,j}$ number of customers that move from i to j\nit follows $C_i=\\sum^{M}_{j=0}{C_{i,j}}$ \n\n$q_{i,j} = \\frac{C_{i,j}}{C_i}$ transition frequency from i to j\nit follows $\\frac{C_{i,j}}{T} = q_{i, j}X_i$ \n","x":280,"y":700,"width":493,"height":280,"color":"2"},
		{"id":"a7dceec0b301b8b3","type":"text","text":"## little law for queue\nusing $V_j=\\frac{X_j}{X_0}$  and knowing $V_0 = 1$ is possible to define $\\textbf{V} = \\textbf{V}\\textbf{Q}$ that can be used to describe the system. this is possible because of the Consistency Laws. it follows also that $\\bar{n_i} = X_i\\bar{w_i}$  where $\\bar{n_i}$ are mean number of customers and $\\bar{w_i}$ are the mean waiting times.","x":1155,"y":800,"width":445,"height":280,"color":"2"},
		{"id":"dc309779218758e4","type":"text","text":"## Bottleneck Analysis: closed systems\nAssume that $S_i$ and $V_i$ are independent of the load system $N$, and concentrate the analysis on $X$ $U$ and $Y$  --> $X_i(N)$ ,$U_i(N)$ and $Y(N)$ (valid for the whole system) that are dependent. Consistency law is valid also there\n$\\frac{X_i(N)}{X_j(N)} = \\frac{V_i}{V_j}$ and $\\frac{U_i(N)}{U_j(N)} = \\frac{V_iS_i}{V_jS_j}$ independently of N.\n\ndenote with b the station whose $U=1$ first when $N$ grows, this is the bottleneck of the network, since $\\frac{U_i(N)}{U_j(N)}$ is fixed for all station i,j=1,2,...,M. The station that becomes saturated first is the one whose $U$ is largest in any loading conditions \n$\\frac{U_b}{U_i}>1$ i=1,...,M $i \\neq b$  so that $V_bS_b=max_i(V_iS_i)$  \n","x":-660,"y":1960,"width":680,"height":320,"color":"2"},
		{"id":"35e2fa33a779bb52","type":"text","text":"## Customer quantities\n$a_k$  = the arrival of the k-th customer\n$c_k$ = instant in which leaves the system (must be $c_k \\gt a_k \\geq 0$)\n$w_k = c_k - a_k$ waiting time for k-th customer\n$\\bar{w} = \\frac{1}{C} \\sum^{C}_{k=1}{w_k}$ average waiting time","x":0,"y":-540,"width":660,"height":160,"color":"2"},
		{"id":"662db573b98e94a5","type":"text","text":"## individual queue\ni = 1,...,M -> index for each station in the network. 0 is the outside(or whole system).\n\n$U_i= X_iS_i$ , $X_0= \\frac{C_0}{T}$ , $\\lambda_0 = \\frac{A_0}{T}$  --> in op eq. $\\lambda_0 = X_0$ \n$V_i$  number of service request for queue i $V_i = \\frac{C_i}{C_0}$ \n$D_i$ total service (time) demand for i $D_i = V_iS_i=\\frac{B_i}{C_0}$ \n","x":-420,"y":460,"width":527,"height":240,"color":"1"},
		{"id":"fc117e12ad19f4c3","type":"text","text":"## Basic quantities\n$T$ length of observation period\n$B$ amount of time in which the system is busy\n$C$ Number of completions\n$A$ Number of arrivals\n","x":-760,"y":-780,"width":460,"height":160,"color":"1"},
		{"id":"32dff756813440ab","type":"text","text":"## Derived quantities\n$\\lambda = \\frac{A}{T}$  job/sec -> arrival rate\n$X= \\frac{C}{T}$ output rate\n$U= \\frac{B}{T}$ utilization \n$S = \\frac{B}{C}$ mean service time","x":-746,"y":-480,"width":412,"height":162,"color":"1"},
		{"id":"b4cf2e3a83f7461d","type":"text","text":"## Consistency law\n$X_0 = \\frac{C_0}{T} =\\frac{1}{V_i}X_i = \\frac{X_i}{V_i}$  -> X in terms of visits\n$X_0 = \\frac{C_0}{T} = \\frac{1}{D_i} = \\frac{U_i}{D_i}$  -> X in terms of utilization\nit follows $\\frac{X_i}{X_j} = \\frac{V_i}{V_j}$ and $\\frac{U_i}{U_j} = \\frac{V_iS_i}{V_jS_j} = \\frac{D_i}{D_j}$ . \nX and U depend in general on the load of the system , relative values remains stable while change from station to station.\nV are characteristics of each client","x":-579,"y":940,"width":491,"height":280,"color":"3"},
		{"id":"fa157308db5f0aea","type":"text","text":"## Matrix definition\nif op eq -> $A_i = C_i$, then  $X_j = \\sum^{M}_{i=0}{X_iq_{i,j}}$  --> can be written as $\\boldsymbol{X}= \\boldsymbol{X}\\boldsymbol{Q}$   \nwhere $\\textbf{X} = (X_0,...,X_M)$  --> vector of M+1 components\n$\\textbf{Q}$ square matrix (M+1) x (M+1) filled with  $q_{i,j} = \\frac{C_{i,j}}{C_i}$ , this matrix characterize the system. it follows that\n$\\frac{X_j}{X_0}  = \\sum^{M}_{i=0}\\frac{X_i}{X_0}q_{i,j}$ --> rewrite of flow balance equation","x":280,"y":1120,"width":494,"height":291,"color":"1"},
		{"id":"101c4c587ff837e3","type":"text","text":"## Closed system with delay station\n$Z$ average delay of station 0, using the delay station to compute visits counts (as reference station). We can write\n$R_0 = \\sum^{M}_{i=1}{\\Omega_i}$ ,  $Y_0= Z+R_0$. In whole system the number of customers is constant, so using little law's on the black box:\n![[Pasted image 20231001173621.png]]\n\nin operational eq. we have $X_0=\\frac{A_0}{T} = \\frac{C_0}{T}$. And denoting $\\bar{n_d}$ the avg number of customers in the delay station and $\\bar{n_{cs}}$ the avg number of customer in the central system we have.\n\n$N=X_0Y_0= X_0(Z+R)= \\bar{n_d} + \\bar{n_{cs}}$ . it follows $R_0 = \\frac{N_{cs}}{X_0} - Z$ \n$U= n_{cs}/N$ ","x":2560,"y":1160,"width":560,"height":600,"color":"2"},
		{"id":"6656dee05f82bb97","type":"text","text":"## Response time\n\nwith $V_i$ and $\\bar{w_i}$ we can compute the amount of time taken by customers to go through the system (response time).\n\n2 types of system:\n- Open System: new customers enter with rate $\\lambda$ . The number of customers can grow to $\\infty$ . If the system is not saturated $X_0 = \\lambda$ \n- Closed System: fixed number of N customers is present in the system. Customers leaving are replaced with new customers","x":1132,"y":1271,"width":568,"height":309,"color":"2"},
		{"id":"40b43e0cc3833949","type":"text","text":"## load dependency\n- $T(n)$ time spent by the system with n customers inside\n- $K_{max}$  maximum number of customers  simultaneously present inside the system \n\n$T = \\sum^{K_{max}}_{n=0}T(n)$  and $B=T-T(0)$  ","x":-1480,"y":-550,"width":460,"height":250,"color":"5"},
		{"id":"a52d9a0b0dffcb75","type":"text","text":"$U = X*S$  -> utilization law\n","x":-1140,"y":-270,"width":300,"height":50,"color":"3"},
		{"id":"bc11cd08a447a385","type":"text","text":"## load dependent behaviour\n\n$\\phi(k) = \\frac{T(k)}{T}$    $k=0,...,K_{max}$  -> fraction of time spent by the system in each state\n\n$C(k)$ -> number of completions with k customers in the systems  -> $\\sum^{K_{max}}_{k=1}{C(k)} = C$ \n\n$S(k) = \\frac{T(k)}{C(k)}$ -> load dependent mean service time or service function \n\n$X = \\sum^{K_{max}}_{k=1}{\\frac{1}{S(k)}{\\phi(k)}}$  generalized throughput","x":-1580,"y":-135,"width":440,"height":355,"color":"3"},
		{"id":"6db3f6c35589094e","type":"text","text":"## load dependent behaviour for queues\n$T_i(k)$ time spent at the i station with k customers inside (i=1,...,M) \nwe can then write $\\sum^{K_{max}}_{k=0}T_i(k) = T$  (i=0,...,M) and then we can define \n$\\phi_i(k) = \\frac{T_i(k)}{T}$ the fraction of time spent by each station with k customers. \n\nLet $C_i(k)$  (i=1,...,M) be the number of completions from the i-th station with k customers inside, also in this case $\\sum^{K_{max}}_{k=1}C_i(k)=C_i$   (i=0,..,M)\nTrivially we can define again $S_i(k)= \\frac{T_i(k)}{C_i(k)}$  (i=0,...,M;k=1,...,$K_{max}$)  \n\nand again $X_i=\\sum^{K_{max}}_{k=1}\\frac{1}{S_i(k)}\\phi_i(k)$  (i=0,...,M)","x":-1860,"y":800,"width":560,"height":344,"color":"3"},
		{"id":"903eaf68704b91e2","type":"text","text":"## Bottleneck analysis: case with load dependent behaviour\nin order to extend the analysis, we can remove the constant constraint from $S_i$, that now became $S_i(N)$ , this is possible only if this function has an upper bound limit for $N \\rightarrow \\infty$ .\nUsing $S_i(1) \\leq S_i^{[max]} = \\lim_{h->\\infty} S_i(h)$ , the discussion made for closed system  $D=Y(1)=\\sum^{i=1}_{M}V_iS_i = \\sum^{i=1}_{M}D_i$ and $Y(N)=NV_bS_b$  can be generalized to \n$Y(1) = \\sum^{i=1}_{M}V_iS_i$ and $Y(N)=NV_bS_b^{[max]}$  --> $V_bS_b^{[max]} = max_i(V_iS_i)^{[max]}$. If the service speed of i goes to 0 all the customers will be blocked by that station so this discussion  is not valid, and so is a generalization for all the stations whose service speed is not an increasing function of the load. \n\nNOTE: the expression for D is equal to R(1).","x":200,"y":2320,"width":680,"height":380,"color":"2"},
		{"id":"dd28b8672f74ebe1","type":"text","text":"## Asymptotic analysis for closed systems\nlarge values of $N$ yield $U \\approxeq 1$ and $X_i(N) \\approxeq \\frac{1}{S_i}$, all the $V_i$ are computed on an arbitrary chosen station k, then the throughput of the system is $X_k(N) = \\frac{U_b(N)}{V_bS_b} \\approxeq \\frac{1}{V_bS_b}$  the value derived is the possible maximum throughput of the station, is then possible to write \n$\\lim_{N \\rightarrow \\infty}X_i(N)=\\frac{1}{V_bS_b}$. using $D_i$ as the total average service time received by station i describe $D=\\sum^{i=1}_{M}V_iS_i = \\sum^{i=1}_{M}D_i$ as the total average time for a client to make a tour of the system (in this case N=1). D is then the cycle time of the system $D = Y(1)$ with little formula we can state $X_k(1)= \\frac{1}{Y(1)}$ , if the networks is build so that the station doesn't interfere with each other then $Y(N)=Y(1)$  and $X_k(N)=\\frac{N}{Y(N)}= \\frac{N}{Y(1)}$.\n\nThe intersection among the asymptotes identify a unique saturation point $N^*=\\frac{Y(1)}{V_bS_b}$. Similarly for the cycle time is possible to note $Y(N)=\\frac{N}{X_k(N)}$ with $Y(1)$ as lower limit and $Y'(N)=N*V_bS_b$ which is a second lower limit (slanting asymptote).\n\n![[Pasted image 20231003110041.png]]","x":-660,"y":2760,"width":680,"height":420,"color":"2"},
		{"id":"faf4fe857eb34de7","type":"text","text":"## One step behavior\n\n![[Pasted image 20231006152829.png]]\nsince $T(n)$ sum to $T$ we can add the normalization condition $\\sum_np(n)=1$. in this way the unique changes that can happen is the arrival or the departure of a customer.","x":-1040,"y":-3140,"width":620,"height":340,"color":"1"},
		{"id":"bbb014c791db1aed","type":"text","text":"## Derived variables\ndenoting with H the total number of equations of this system, his value can be $H=(N_{max}+1)^M$  and $H = \\binom{N+M-1}{M-1}$  in the case of a open system with Nmax customers observed or closed with N respectively.\n\nAccording to the one step behavior hypothesis the transition can occur only within adjacent states.  Let's introduce the following definitions \n$\\underline{n_{ij}} = (n_1,...,n_i+1,...,n_j-1,...,n_M)$ \n$\\underline{n_{i0}} = (n_1,...,n_i+1,...,n_j,...,n_M)$ \n$\\underline{n_{0j}} = (n_1,...,n_i,...,n_j-1,...,n_M)$ \nthat we can use to indicates the states that are adjacent to \n$\\underline{n} = (n_1,...,n_i,...,n_j,...,n_M)$ \n\n\n","x":-1950,"y":-3300,"width":560,"height":410,"color":"2"},
		{"id":"ff2051be11566f1f","type":"text","text":"## Homogeneity\n1) the output of a station of the system is completely determined by the length of its input queue, but independent of the length of the others stations.\n2) the transition frequencies among the stations of the system are independent of the state of the system and may depend at most on the total load of the system(N)","x":-1937,"y":-3860,"width":537,"height":272,"color":"3"},
		{"id":"19f63ac3ff302e87","type":"text","text":"## Simplify transition rates \nthe transition rates becomes $r(\\underline{n},\\underline{n}_{ij}) = \\frac{C_{ij}(n_j)}{T_j(n_j)}$ for the one step,  $C_{ji}= C_j(n_j)q_{ij}$ for homogeneity. Overall we obtain \n$$\nr(\\underline{n},\\underline{n}_{ij}) = \n\\begin{cases}\n\\frac{q_{ji}}{S_j(n_j)} \\ \\ \\ j \\rightarrow i\\\\\n\\frac{q_{j0}}{S_j(n_j)} \\ \\ \\ j \\rightarrow 0 \\\\\n\\lambda_{0i} \\ \\ \\ 0 \\rightarrow i\n\\end{cases}\n$$\n","x":-990,"y":-3852,"width":520,"height":264,"color":"2"},
		{"id":"12fc9f901d5acd3a","type":"text","text":"## Queue length distribution\nrecall $F(k)= \\lambda S(k)f(k-1)$ for k>0 and F(0)=1\n- Case 1: Single server queue $p(n)=p(0)F(n)$    n>0\n- Case 2: Single Server queue embedded in Open network $P_M(n)=\\frac{1}{G_M}F_M(n)$ n>0\n- Case 3: Single Server queue in closed netork $P_M(n)=\\frac{g(N-m,M-1)}{G(N,M)}F_M(n)$    $0 \\leq n \\leq N$ \nin Case 1 the normalizing constant p(0) is different from zero if the queue is stable\n$\\lambda*S(k)<1$  for k>k0\nin Case 2 the normalizing constant Gm is != 0 if the queue is stable $\\lambda_M*S_m(k)<1$ \nin Case 3 the normalization factor is not constant.","x":-1760,"y":-5100,"width":720,"height":340,"color":"2"},
		{"id":"6b98a192f01ea1d6","type":"text","text":"## Computation of performance measures\n\n- $X_i=\\sum^{n}_{k=1}p_i(k)\\frac{1}{S_i(k)}$ \n- $U_i=1-P_i(0)$ \n- $\\overline{n}_i=\\sum_kkp_i(k)$ \n- $\\overline{w_i} = \\frac{n_i}{X_i}$ ","x":-2430,"y":-4491,"width":500,"height":282,"color":"1"},
		{"id":"aa245bd273c53851","type":"text","text":"## Marginal distribution\ndefine the number of distribution of the number of customer at station \n$$\np_i(k) = \\sum_{\\underline{n_{n_i = k}}}P(\\underline{n})\n$$\n","x":-1650,"y":-4491,"width":500,"height":282},
		{"id":"6ade624835c994cf","type":"text","text":"## Result\nusing the recursive expression of $p(\\underline{n})$ we obtain (no intermediary)\n$$\n\\begin{cases}\nP(\\underline{n}_{i0}) = \\lambda_iS_i(n_i+1)P(\\underline{n}) \\\\\n\\\\\nP(\\underline{n}_{0j}) = \\frac{1}{\\lambda_jS_j(n_j)}\\\\\n\\\\\nP(\\underline{n}_{ij}) = \\frac{\\lambda_iS_i(n_i+1)}{\\lambda_jS_j(n_j)}P(\\underline{n})\n\\end{cases}\n$$\n","x":-920,"y":-4500,"width":613,"height":300,"color":"2"}
	],
	"edges":[
		{"id":"a6970adb8d3c75e6","fromNode":"fc117e12ad19f4c3","fromSide":"bottom","toNode":"32dff756813440ab","toSide":"top"},
		{"id":"19c4c6418a037ffd","fromNode":"32dff756813440ab","fromSide":"left","toNode":"a52d9a0b0dffcb75","toSide":"top"},
		{"id":"c6c6914f9744eecd","fromNode":"32dff756813440ab","fromSide":"bottom","toNode":"0d7bd16152310260","toSide":"top"},
		{"id":"eac4ed3334055aa5","fromNode":"0d7bd16152310260","fromSide":"bottom","toNode":"f013210ab3c0b8bb","toSide":"top"},
		{"id":"3d9870699a9ba889","fromNode":"fc117e12ad19f4c3","fromSide":"right","toNode":"35e2fa33a779bb52","toSide":"top"},
		{"id":"75615e1d753d1f02","fromNode":"32dff756813440ab","fromSide":"right","toNode":"8f67c93e0b3bfca6","toSide":"left"},
		{"id":"bb8074c5c8ab9f43","fromNode":"35e2fa33a779bb52","fromSide":"bottom","toNode":"8f67c93e0b3bfca6","toSide":"top"},
		{"id":"2e871ec5293f7a48","fromNode":"8f67c93e0b3bfca6","fromSide":"right","toNode":"42008c372ee66c82","toSide":"left"},
		{"id":"eeda36b125f5b7d9","fromNode":"32dff756813440ab","fromSide":"left","toNode":"40b43e0cc3833949","toSide":"right"},
		{"id":"4d6d7a300d30eb84","fromNode":"40b43e0cc3833949","fromSide":"bottom","toNode":"bc11cd08a447a385","toSide":"top"},
		{"id":"5bfb4d423bcc5356","fromNode":"32dff756813440ab","fromSide":"bottom","toNode":"662db573b98e94a5","toSide":"top"},
		{"id":"39457f6ef92d0c84","fromNode":"662db573b98e94a5","fromSide":"bottom","toNode":"b4cf2e3a83f7461d","toSide":"top"},
		{"id":"36ef4a1889455508","fromNode":"662db573b98e94a5","fromSide":"right","toNode":"b55e63ed49ae1888","toSide":"top"},
		{"id":"3b73230ad155bc94","fromNode":"b55e63ed49ae1888","fromSide":"bottom","toNode":"fa157308db5f0aea","toSide":"top"},
		{"id":"2c6382869fdb1305","fromNode":"0d7bd16152310260","fromSide":"right","toNode":"fa157308db5f0aea","toSide":"left"},
		{"id":"3d1dc119451f8f2c","fromNode":"8f67c93e0b3bfca6","fromSide":"right","toNode":"a7dceec0b301b8b3","toSide":"top"},
		{"id":"3c0d24f0f6207f8c","fromNode":"fa157308db5f0aea","fromSide":"right","toNode":"a7dceec0b301b8b3","toSide":"left"},
		{"id":"14452aa2e3dc6b6f","fromNode":"b4cf2e3a83f7461d","fromSide":"right","toNode":"a7dceec0b301b8b3","toSide":"left"},
		{"id":"05f1d3ccfff3b2a1","fromNode":"a7dceec0b301b8b3","fromSide":"bottom","toNode":"6656dee05f82bb97","toSide":"top"},
		{"id":"974b63fa83206706","fromNode":"6656dee05f82bb97","fromSide":"bottom","toNode":"5ae4eaaad9fe5407","toSide":"top"},
		{"id":"b515ab79eee63497","fromNode":"6656dee05f82bb97","fromSide":"bottom","toNode":"76a7e114f52e75a2","toSide":"top"},
		{"id":"a65af0db363f53cc","fromNode":"8f67c93e0b3bfca6","fromSide":"bottom","toNode":"5ae4eaaad9fe5407","toSide":"left"},
		{"id":"060863ededa64a23","fromNode":"76a7e114f52e75a2","fromSide":"right","toNode":"101c4c587ff837e3","toSide":"left"},
		{"id":"1a5f07c2c9a801b9","fromNode":"8f67c93e0b3bfca6","fromSide":"right","toNode":"101c4c587ff837e3","toSide":"top"},
		{"id":"a5fd807560ce9555","fromNode":"662db573b98e94a5","fromSide":"left","toNode":"6db3f6c35589094e","toSide":"right"},
		{"id":"29df6fb74fc667e9","fromNode":"bc11cd08a447a385","fromSide":"bottom","toNode":"6db3f6c35589094e","toSide":"top"},
		{"id":"249d0aaa4c96afae","fromNode":"b4cf2e3a83f7461d","fromSide":"bottom","toNode":"51af6783ee91e15d","toSide":"top"},
		{"id":"63c23df20d6ec722","fromNode":"51af6783ee91e15d","fromSide":"bottom","toNode":"204cfc62bd11bc51","toSide":"top"},
		{"id":"2b657aee78657160","fromNode":"6db3f6c35589094e","fromSide":"bottom","toNode":"204cfc62bd11bc51","toSide":"top"},
		{"id":"e796bea06f6f596f","fromNode":"f013210ab3c0b8bb","fromSide":"bottom","toNode":"204cfc62bd11bc51","toSide":"top"},
		{"id":"50511f9d3136b96f","fromNode":"204cfc62bd11bc51","fromSide":"bottom","toNode":"6301506dc772fe94","toSide":"top"},
		{"id":"09912a2534d06c26","fromNode":"51af6783ee91e15d","fromSide":"bottom","toNode":"dc309779218758e4","toSide":"top"},
		{"id":"dd3a17aa7694d27b","fromNode":"b4cf2e3a83f7461d","fromSide":"bottom","toNode":"dc309779218758e4","toSide":"top"},
		{"id":"e68f5f5bebe27c7b","fromNode":"dc309779218758e4","fromSide":"bottom","toNode":"dd28b8672f74ebe1","toSide":"top"},
		{"id":"b3688e3609dc5771","fromNode":"6db3f6c35589094e","fromSide":"right","toNode":"903eaf68704b91e2","toSide":"top"},
		{"id":"3f8babe994522485","fromNode":"dc309779218758e4","fromSide":"right","toNode":"903eaf68704b91e2","toSide":"left"},
		{"id":"842a433573b4a10a","fromNode":"dd28b8672f74ebe1","fromSide":"right","toNode":"903eaf68704b91e2","toSide":"left"},
		{"id":"516ba6791c8e1f99","fromNode":"903eaf68704b91e2","fromSide":"bottom","toNode":"25245c0f354560b7","toSide":"top"},
		{"id":"dc9f3b7e3e53ff72","fromNode":"25245c0f354560b7","fromSide":"right","toNode":"f79a971e4f3ddb59","toSide":"left"},
		{"id":"e9db25a8d89dbe74","fromNode":"25245c0f354560b7","fromSide":"right","toNode":"b7f82509894a24e0","toSide":"left"},
		{"id":"e3e67d7722d25cb2","fromNode":"b7f82509894a24e0","fromSide":"bottom","toNode":"7ba10d4143bcda02","toSide":"top"},
		{"id":"fabb70e740eba691","fromNode":"fc117e12ad19f4c3","fromSide":"top","toNode":"9ae8e6870332cde0","toSide":"bottom"},
		{"id":"6e25574e414837cb","fromNode":"9ae8e6870332cde0","fromSide":"top","toNode":"e3843ff935cf180f","toSide":"bottom"},
		{"id":"e09a08fdef35583f","fromNode":"e3843ff935cf180f","fromSide":"top","toNode":"f1968be66e6acbc2","toSide":"bottom"},
		{"id":"3f66ee79433243c8","fromNode":"f1968be66e6acbc2","fromSide":"top","toNode":"faf4fe857eb34de7","toSide":"bottom"},
		{"id":"b56b04370a0cab44","fromNode":"f1968be66e6acbc2","fromSide":"right","toNode":"6f94b72d86303cce","toSide":"left"},
		{"id":"4c9fc35f55fb6183","fromNode":"faf4fe857eb34de7","fromSide":"right","toNode":"6f94b72d86303cce","toSide":"left"},
		{"id":"20c33b8c3ce5d432","fromNode":"e3843ff935cf180f","fromSide":"right","toNode":"6f94b72d86303cce","toSide":"left"},
		{"id":"73f6c4823802a5e7","fromNode":"f1968be66e6acbc2","fromSide":"right","toNode":"e7cbfa1e8e4e91da","toSide":"left"},
		{"id":"fb983791cfcb45da","fromNode":"e7cbfa1e8e4e91da","fromSide":"right","toNode":"e280cc6a468927d5","toSide":"left"},
		{"id":"5674d0943bde1a0f","fromNode":"6f94b72d86303cce","fromSide":"right","toNode":"e280cc6a468927d5","toSide":"left"},
		{"id":"69c33e4fb5bdc2c8","fromNode":"e280cc6a468927d5","fromSide":"right","toNode":"4150740c32b05c3d","toSide":"left"},
		{"id":"ac335ab8b9c3a940","fromNode":"4150740c32b05c3d","fromSide":"top","toNode":"66533552c4f95712","toSide":"bottom"},
		{"id":"e7fd66376e197818","fromNode":"e280cc6a468927d5","fromSide":"right","toNode":"7f55ca3ee4cdd46e","toSide":"left"},
		{"id":"0d29ac4976f10cde","fromNode":"7f55ca3ee4cdd46e","fromSide":"bottom","toNode":"ccae7520e9d46438","toSide":"top"},
		{"id":"3c48736a0fe601cb","fromNode":"4150740c32b05c3d","fromSide":"right","toNode":"d6a9b3f6d5709b11","toSide":"left"},
		{"id":"3a8ec9c7448fde03","fromNode":"7f55ca3ee4cdd46e","fromSide":"right","toNode":"d6a9b3f6d5709b11","toSide":"left"},
		{"id":"3f52312b1e5dae18","fromNode":"d6a9b3f6d5709b11","fromSide":"right","toNode":"bed9c9c0f301e728","toSide":"left"},
		{"id":"98878775e3ac8519","fromNode":"d6a9b3f6d5709b11","fromSide":"right","toNode":"9971edf283b6f764","toSide":"left"},
		{"id":"649092c716c4655e","fromNode":"d6a9b3f6d5709b11","fromSide":"right","toNode":"b3f5033f317f59e0","toSide":"left"},
		{"id":"9add29affe455baf","fromNode":"d6a9b3f6d5709b11","fromSide":"right","toNode":"80e0667087246610","toSide":"left"},
		{"id":"260b952a855c336c","fromNode":"bed9c9c0f301e728","fromSide":"bottom","toNode":"b3f5033f317f59e0","toSide":"top"},
		{"id":"1a4747670044b10e","fromNode":"d6a9b3f6d5709b11","fromSide":"right","toNode":"39ad710a054597f5","toSide":"left"},
		{"id":"f396eb7605f390cc","fromNode":"9ae8e6870332cde0","fromSide":"top","toNode":"f79be80e8176bda7","toSide":"bottom"},
		{"id":"90f86241c18cabef","fromNode":"f79be80e8176bda7","fromSide":"top","toNode":"e1d6a29195272637","toSide":"bottom"},
		{"id":"87dab3de71b71119","fromNode":"e1d6a29195272637","fromSide":"left","toNode":"c9ee6b214af165d0","toSide":"right"},
		{"id":"beeb2bca70b52ec4","fromNode":"e1d6a29195272637","fromSide":"top","toNode":"bbb014c791db1aed","toSide":"bottom"},
		{"id":"9799855bdfffb2e5","fromNode":"faf4fe857eb34de7","fromSide":"left","toNode":"bbb014c791db1aed","toSide":"right"},
		{"id":"9e622b050f01be4c","fromNode":"bbb014c791db1aed","fromSide":"top","toNode":"ff2051be11566f1f","toSide":"bottom"},
		{"id":"9fe34c7e7cf6ca66","fromNode":"ff2051be11566f1f","fromSide":"right","toNode":"19f63ac3ff302e87","toSide":"left"},
		{"id":"4c2ad0ebf5233700","fromNode":"faf4fe857eb34de7","fromSide":"top","toNode":"19f63ac3ff302e87","toSide":"bottom"},
		{"id":"040ce8abe79d4092","fromNode":"19f63ac3ff302e87","fromSide":"right","toNode":"b83ea790bafa9577","toSide":"left"},
		{"id":"bf78d666e15000c8","fromNode":"b83ea790bafa9577","fromSide":"top","toNode":"ae28ccf4bec6f2cc","toSide":"bottom"},
		{"id":"2cdace3909b33ec9","fromNode":"ae28ccf4bec6f2cc","fromSide":"left","toNode":"6ade624835c994cf","toSide":"right"},
		{"id":"fd7840d82cd08bd4","fromNode":"aa245bd273c53851","fromSide":"left","toNode":"6b98a192f01ea1d6","toSide":"right"},
		{"id":"fc47f9c0e7c52db3","fromNode":"ae28ccf4bec6f2cc","fromSide":"right","toNode":"d2d0757ccb12add6","toSide":"left"},
		{"id":"ba76ec3e30722c68","fromNode":"ae28ccf4bec6f2cc","fromSide":"right","toNode":"96a3e3bf2f758aa4","toSide":"left"},
		{"id":"9e2a84361e50bebc","fromNode":"d2d0757ccb12add6","fromSide":"top","toNode":"96a3e3bf2f758aa4","toSide":"bottom"},
		{"id":"26cb71f798f4e470","fromNode":"96a3e3bf2f758aa4","fromSide":"top","toNode":"a9f7caa576607007","toSide":"bottom"},
		{"id":"d2c3a200f0c383ef","fromNode":"a9f7caa576607007","fromSide":"top","toNode":"c3c7a5fe5ac5216d","toSide":"bottom"},
		{"id":"8d5a15ab9c588a4a","fromNode":"c3c7a5fe5ac5216d","fromSide":"right","toNode":"82028708709b698f","toSide":"left"},
		{"id":"4a79984b821a46ad","fromNode":"aa245bd273c53851","fromSide":"top","toNode":"12fc9f901d5acd3a","toSide":"bottom"},
		{"id":"7fd5711b18929fb7","fromNode":"c3c7a5fe5ac5216d","fromSide":"top","toNode":"2ba219e79a4bca20","toSide":"bottom"},
		{"id":"183daffad6ddc570","fromNode":"2ba219e79a4bca20","fromSide":"top","toNode":"47843eaaace05584","toSide":"bottom"},
		{"id":"192f02699600efc3","fromNode":"47843eaaace05584","fromSide":"top","toNode":"c6b513b281a028cf","toSide":"bottom"},
		{"id":"28c1a15ed0fef137","fromNode":"47843eaaace05584","fromSide":"right","toNode":"32e85f7af7bc55e0","toSide":"left"},
		{"id":"e4ddb874e27cc418","fromNode":"32e85f7af7bc55e0","fromSide":"top","toNode":"6077b63e1364d508","toSide":"bottom"},
		{"id":"28626988a4548549","fromNode":"c6b513b281a028cf","fromSide":"right","toNode":"6077b63e1364d508","toSide":"left"},
		{"id":"dacd1cc692324338","fromNode":"32e85f7af7bc55e0","fromSide":"right","toNode":"2534d2556ecf65f8","toSide":"left"},
		{"id":"1945ce2a175d2c19","fromNode":"2534d2556ecf65f8","fromSide":"top","toNode":"4c392e6eef534737","toSide":"bottom"},
		{"id":"59dd7817ae14baa9","fromNode":"6ade624835c994cf","fromSide":"left","toNode":"aa245bd273c53851","toSide":"right"},
		{"id":"6ac97db4f0a5fa2d","fromNode":"12fc9f901d5acd3a","fromSide":"top","toNode":"2534d2556ecf65f8","toSide":"bottom"},
		{"id":"482c8d048bda5a92","fromNode":"ae28ccf4bec6f2cc","fromSide":"top","toNode":"5a778c5710a88148","toSide":"bottom"}
	]
}