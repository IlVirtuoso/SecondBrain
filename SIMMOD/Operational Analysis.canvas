{
	"nodes":[
		{"id":"2ba219e79a4bca20","type":"text","text":"## Arrival theorem \n$\\overline{w}(n)= S_m[1+\\overline{n}_m(n-1)$ this is known as the Arrival theorem that states: \"if a single server has a poisson input process then the arriving customers see the queue as if they were external observers not involved in this operation\".\n\nIn the case of closed queueing networks with Product form solution the same theorem say: when network has n customers, arriving customer see queue i as external observers which monitor the queue in equilibrium when only n-1 customers are is the system","x":1407,"y":-7100,"width":688,"height":300,"color":"1"},
		{"id":"82028708709b698f","type":"text","text":"## Computation of performance figures\nusing explicit expression of $P(\\underline{n})$ we have $p_m(k)= f_m(k)\\frac{g(n-k,m-1)}{g(n,m)}$.\nnote: for the rest of the scheme $p_m(k,n)$ will be simplified in $p_m(k)$ omitting the explicit dependence with the size of the population. Here some perfomance indices that can be calculated:\n- $X_m= \\sum^{n}_{k=1}p_m(k)\\frac{1}{S_m(k)} = V_m \\frac{g(n-1,m)}{g(n,m)}$ \n- $U_m=1-p_m(0)=1- \\frac{g(n,m-1)}{g(n,m)}$ \nnotice that X and U can be also picked from the table produced by the computation of g.\n- $\\overline{n}_m = \\sum^{n}_{k=1}kp_m(k)$ \n- $\\overline{w}_m = \\frac{\\overline{n}_m}{X_m}$ \nIn case of load indipendent station the following can be applied \n- $U_m= X_m S_m = V_m S_m \\frac{g(n-1,m)}{g(n,m)}$ (standard formula)\n- $\\overline{n}_m(n)= U_m(n)[1+\\overline{n}_m(n-1)]$ \n- $\\overline{w}_m(n)= S_m[1+\\overline{n}_m(n-1)]$ ","x":2840,"y":-6433,"width":780,"height":466,"color":"1"},
		{"id":"c3c7a5fe5ac5216d","type":"text","text":"## Computational Scheme for G\nin order for this scheme to work we must have first computed all the values of $f_m(k)$ and of $g(k,m-1)$ , every row of the recursion of g correspond to a specific load of the system and every column correspond to a specific station. The recursion is made first on the loading level (n) and then on the components of the network(m) starting from the upper left corner and ending to the bottom right.\nThe complexity of the computation is in order of : $N^2*M$  in the general case and $N*M$ if all the stations are load indipendent (is much simpler to calculate). \n```\n//Input -> M: int,N: int,V[i]: Array<double>, S[i](k): Array<Array<double>>, ST[i]: Array<SType>\n//Output -> G(k): Array<double>\n\nG[0] = 1.0;\nfor k in 1...N{\n\tG[k]= 0.0;\n}\nfor i in 1...M{\n\tif(ST[i] == LI){\n\t\td = V[i] * S[i][1];\n\t\tfor k in 1...N{\n\t\t\tG[k] = G[k] + d*G[k-1];\n\t\t}\n\t}\n\n\telse{\n\t\tf[0] = 1.0\n\t\tfor k in 1...N{\n\t\t\tf[k] = f[k-1]*V[i]*S[i][k];\n\t\t}\n\t\tfor n in N...1{\n\t\t\tsum = G[n];\n\t\t\tfor k in 1...n{\n\t\t\t\tsum += f[k] * G[n-k];\n\t\t\t}\n\t\t}\n\t}\n}\n```","x":1288,"y":-6480,"width":925,"height":560,"color":"1"},
		{"id":"a9f7caa576607007","type":"text","text":"## The Convolution method\nIn a closed system a state $\\underline{n}$ is feasible if $n_i \\geq 0,i=1\\dots M$  and $\\sum^{M}_{i=1}n_i=N$ the second condition introduce dependency among the stations of the system.\n\nfor convenience let's define the state space of the system with m station and n customers as\n$$\nS(n,m)=\\{(n_1 \\dots n_M | n_i \\geq 0, i=1 \\dots m; \\sum^{m}_{i=1}n_i=n \\}\n$$\ndefine the following auxiliary function $g(n,m)= \\sum_{\\underline{n} \\in S(n,m)} \\prod^{m}_{i=1}f_i(n_i)$  with $g(N,M)=G$ \nwith a little manipulation is possible to prove that \n$$\ng(n,m) = \\sum^{n}_{k=0}f_m(k)g(n-k,m-1) \n$$\nthe definition of g(n,m) can be made recursive introducing the following base conditions\n$g(0,m) = 1(m=0 \\dots )$ and $g(n,0) = 0 (n=1 \\dots)$. This definition is a convolution sum (Convolution algorithm) used for compute the normalization constant in efficient manner. \n","x":1335,"y":-5700,"width":830,"height":480,"color":"1"},
		{"id":"96a3e3bf2f758aa4","type":"text","text":"## Computing normalization constant in closed systems \n\nThe indipendece of $N_i$ doesnÂ´t apply for closed network. In closed systems there aren't new arrivals, so the only possibility are customers that move from one station to another. The global balance equations assumes a much simpler form. \n$$\n\\sum^{M}_{i,j=1}P(\\underline{n_{ij}})\\frac{q_{ij}\\delta(n_j)}{S_i(n_i+1)}=P(\\underline{n})\\sum^{M}_{i=1}\\frac{\\delta(n_i)}{S_i(n_i)}\n$$\n\nthe formal definitions remains the same.  for G: $P(\\underline{n}) = \\frac{1}{G}\\prod^{M}_{i=1}f_i(n_i)$  where \n$$\nf_i(k)= \\begin{cases}\n1 \\ \\ \\ k=0 \\\\\nV_iS_i(k)f_i(k-1) \\ \\ k>0\n\\end{cases}\n$$\nand $G = \\sum_\\underline{n}\\prod^{M}_{i=1}f_i(n_i)$ ","x":1320,"y":-4920,"width":860,"height":410,"color":"1"},
		{"id":"ae28ccf4bec6f2cc","type":"text","text":"## Solving transition balance \nassume all the $V_i$ are computed so that we can assume $\\lambda_i=\\begin{cases}\\lambda V_i \\ \\ \\ open\\ system \\\\ V_i \\ \\ \\ closed\\ system \\end{cases}$ , where $\\lambda$ represent the total arrival rate of external customers to the system.  Define also the following function \n$$\nf_i(k)= \\begin{cases}\n1 \\ \\ \\ k = 0 \\\\\n\\lambda_iS_i(k)f_i)k-1 \\ \\ \\ k>0\n\\end{cases}\n$$\nis it possible to show that the time spent by the system in each of its states is $$P(\\underline{n})= \\frac{1}{G} \\prod^{M}_{i=1}f_i(n_i)$$\nThis is called product form solution , G is a normalization constant defined in this way \n$$\n1= \\sum_{\\underline{n}}P(\\underline{n}) = \\frac{1}{G}\\sum_{\\underline{n}}\\prod^{M}_{i=1}f_i(n_i) \\rightarrow G= \\sum_{\\underline{n}}\\prod^{M}_{i=1}f_i(n_i)\n$$\n","x":60,"y":-4580,"width":760,"height":460,"color":"1"},
		{"id":"d2d0757ccb12add6","type":"text","text":"## Computing normalization constant in open systems \n\nDenote with $N_i,i=1,...,M$ the maximum number of customers observed at station i during all observation (0,T].\nIn the case of open systems those $N_i$ can be arbitrarily large (and in fact grow to infinity). This means that there is not dependency among $N_i$ so the normalization constant G becomes .\n$$\nG=\\sum_\\underline{n}\\prod^{M}_{i=1}f_i(n_i) = \\prod^{M}_{i=1}\\sum^{N_i}_{i=1}f_i(n_i) = \\prod^{M}_{i=1}G_i\n$$\nand then the product form solution become \n$$\nP(\\underline{n}) = \\frac{1}{G} \\prod^{M}_{i=1}f_i(n_i)=\\prod^{M}_{i=1}\\frac{f_i(n_i)}{G_i} = \\prod^{M}_{i=1}p_i(n_i) \n$$\n","x":1320,"y":-4209,"width":860,"height":440,"color":"1"},
		{"id":"b83ea790bafa9577","type":"text","text":"## Simplify state transition balance equations\nlet's introduce an indicator function defined in this way $\\sigma(n)= \\begin{cases}1 \\ \\ \\ n>0 \\\\0 \\ \\ \\ n=0\\end{cases}$ \nusing $\\lambda_{0j}$ as the external arrival rate directed toward the station of index j\nWith all those hypothesis the transition balance equations assume the following form \n$$\n\\sum^{M}_{i,j=1}P(\\underline{n}_{ij}) \\frac{q_{ij}}{S_i(n_i+1)}\\sigma(n_j) + \\sum^{M}_{j=1}P(\\underline{n}_{0j})\\lambda_{0j}\\sigma(n_j) + \\sum^{M}_{i=1}P(\\underline{n}_{i0})\\frac{q_{i0}}{S_i(n_i+1)}= P(\\underline{n})[\\sum^{M}_{i=1}\\frac{\\sigma(n_i)}{S_i(n_i)} +  \\sum^{M}_{j=1}\\lambda_{0j}]\n$$\n\n","x":60,"y":-3864,"width":760,"height":288,"color":"3"},
		{"id":"e1d6a29195272637","type":"text","text":"## Intermediate behavior\n$T(n)$ = total time spent by the system in state $\\underline{n}$ during observation period, with $\\sum T(n) = T$. \nLet $P(n)= T(n)/T$ be the fraction of time spent by the system in state $\\underline{n}$. \n\nthe set of fractions of time spent by the system in each state in $S(M)$ or $\\{P(\\underline{n}), \\underline{n} \\in S(M)\\}$ is called \"distribution of the fractions of time spent by the system in its states\". The objective is to derive P(n) not through direct measures but by using the parameters of the model. \n\nlet $C(\\underline{n}, \\underline{m})$ be # of direct transition made by the system from state $\\underline{n}$ to state $\\underline{m}$. In our measurement we can't observe transition within the same state so $C(\\underline{n},\\underline{n}) = 0$ for any n\n\n","x":-1980,"y":-2660,"width":620,"height":400,"color":"1"},
		{"id":"c9ee6b214af165d0","type":"text","text":"## Operational equilibrium \nalso in this case $A=C$ is required for every station. The number of departures and arrivals must be $n_i(0)= n_i(T) \\ \\ \\  i=1...M$.\n\nthis means that the op eq condition is satisfied every time the measurement start with a state and ends with that state. For a single server in isolation then \n$$\n\\sum_kC(\\underline{k},\\underline{n}) = \\sum_mC(\\underline{n},\\underline{m}) \\ \\ \\ \\forall \\underline{n}\n$$\n\nthen we can say \"the flow balance condition among customer of a system is equivalent to balancing the number of transition among the  state of the system\" \n\nDefine now the transition rate from n to m as $r(\\underline{n},\\underline{m})= \\frac{C(\\underline{n},\\underline{m})}{T(\\underline{n})}$ . \n$T(\\underline{n})=0$ implies $C(\\underline{n}, \\underline{m})=0$. Now we can introduce those variables in balance equation \n$$\n\\sum_\\underline{k} P(\\underline{k})r(\\underline{k},\\underline{n}) = P(\\underline{n}) \\sum_\\underline{m}r(\\underline{n},\\underline{m}) \n$$\nthe definition of P(n) allows to add a normalization equation \n$\\sum_\\underline{n}P(\\underline{n})=1$ ","x":-2880,"y":-2765,"width":560,"height":610,"color":"1"},
		{"id":"5a778c5710a88148","type":"text","text":"## The BCMP theorem\nA queueing network has a product form solution if it satisfies the following criteria:\n- The network has a finite number of stations \n- Customer belong to an arbitrary and finite number of closed or open classes and can change class memberships\n- Routing probability are defined for each class identified by a DTMC (markov chain) (so as a matrix)\n- The station of the network may be of 4 different types:\n\t- FCFS with negative exponential distribution of service times\n\t- LCFS with a rationale laplace transform distribution of service times \n\t- Processor Sharing with a rationale laplace transform distribution of service times \n\t- Infinite server with a rationale laplace transform distribution of service times\n\nFCFS is commonly associated to negative exponential distribution, this is the standard first come first served policy.\n\nLCFSpr (preemptive resume) last come first served: studied as a simple approximation of server undergoing high priority interruptions. When a new customer join a non empty queue, the customer in service is interrupted, pushed into an input stack and resumed later.\n\nPS Process sharing discipline: represent a limit for the round robin discipline as its quantum size goes to 0\n\nIS infinte server discipline makes the server equivalent to a delay station.","x":-29,"y":-5540,"width":939,"height":560},
		{"id":"f79be80e8176bda7","type":"text","text":"## State balance of a network of queues\nset of all possible states $S(M) = \\{\\underline{n} =(n_1,n_2,...,n_M), n_i \\geq 0 i=1,2,...,M\\}$  \n\n$\\underline{k}, \\underline{m}$ and $\\underline{n}$ will be generic states.","x":-1980,"y":-2040,"width":620,"height":171,"color":"5"},
		{"id":"faf4fe857eb34de7","type":"text","text":"## One step behavior\n\n![[Pasted image 20231006152829.png]]\nsince $T(n)$ sum to $T$ we can add the normalization condition $\\sum_np(n)=1$. in this way the unique changes that can happen is the arrival or the departure of a customer.","x":-1040,"y":-3140,"width":620,"height":340,"color":"1"},
		{"id":"bbb014c791db1aed","type":"text","text":"## Derived variables\ndenoting with H the total number of equations of this system, his value can be $H=(N_{max}+1)^M$  and $H = \\binom{N+M-1}{M-1}$  in the case of a open system with Nmax customers observed or closed with N respectively.\n\nAccording to the one step behavior hypothesis the transition can occur only within adjacent states.  Let's introduce the following definitions \n$\\underline{n_{ij}} = (n_1,...,n_i+1,...,n_j-1,...,n_M)$ \n$\\underline{n_{i0}} = (n_1,...,n_i+1,...,n_j,...,n_M)$ \n$\\underline{n_{0j}} = (n_1,...,n_i,...,n_j-1,...,n_M)$ \nthat we can use to indicates the states that are adjacent to \n$\\underline{n} = (n_1,...,n_i,...,n_j,...,n_M)$ \n\n\n","x":-1950,"y":-3300,"width":560,"height":410,"color":"2"},
		{"id":"ff2051be11566f1f","type":"text","text":"## Homogeneity\n1) the output of a station of the system is completely determined by the length of its input queue, but independent of the length of the others stations.\n2) the transition frequencies among the stations of the system are independent of the state of the system and may depend at most on the total load of the system(N)","x":-1937,"y":-3860,"width":537,"height":272,"color":"3"},
		{"id":"12fc9f901d5acd3a","type":"text","text":"## Queue length distribution\nrecall $F(k)= \\lambda S(k)f(k-1)$ for k>0 and F(0)=1\n- Case 1: Single server queue $p(n)=p(0)F(n)$    n>0\n- Case 2: Single Server queue embedded in Open network $P_M(n)=\\frac{1}{G_M}F_M(n)$ n>0\n- Case 3: Single Server queue in closed netork $P_M(n)=\\frac{g(N-m,M-1)}{G(N,M)}F_M(n)$    $0 \\leq n \\leq N$ \nin Case 1 the normalizing constant p(0) is different from zero if the queue is stable\n$\\lambda*S(k)<1$  for k>k0\nin Case 2 the normalizing constant Gm is != 0 if the queue is stable $\\lambda_M*S_m(k)<1$ \nin Case 3 the normalization factor is not constant.","x":-1760,"y":-5100,"width":720,"height":340,"color":"2"},
		{"id":"6b98a192f01ea1d6","type":"text","text":"## Computation of performance measures\n\n- $X_i=\\sum^{n}_{k=1}p_i(k)\\frac{1}{S_i(k)}$ \n- $U_i=1-P_i(0)$ \n- $\\overline{n}_i=\\sum_kkp_i(k)$ \n- $\\overline{w_i} = \\frac{n_i}{X_i}$ ","x":-2430,"y":-4491,"width":500,"height":282,"color":"1"},
		{"id":"aa245bd273c53851","type":"text","text":"## Marginal distribution\ndefine the number of distribution of the number of customer at station \n$$\np_i(k) = \\sum_{\\underline{n_{n_i = k}}}P(\\underline{n})\n$$\n","x":-1650,"y":-4491,"width":500,"height":282},
		{"id":"c6b513b281a028cf","type":"text","text":"## MVA for LI stations \n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tw[i][k] = S[i]*(1+n[i][k-1]);\n\t}\n\tsum = 0;\n\tfor i in 1...M{\n\t\tsum += V[i]*w[i][k];\n\t}\n\tXref = k/sum;\n\tfor i in 1...M{\n\t\tX[i][k]= V[i]*Xref;\n\t\tU[i][k]=S[i]*X[i][k];\n\t\tn[i][k]=U[i][k]*(1+n[i][k-1]);\n\t}\n}\n\n```","x":1441,"y":-8480,"width":620,"height":640},
		{"id":"6077b63e1364d508","type":"text","text":"## MVA for LI&D stations \n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>, ST[i]: Array<StationType>,Z[i] : Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tif(ST[i] == \"D){w[i][k] = Z[i]}\n\t\telse{w[i][k] = S[i]*(1+n[i][k-1]);}\n\t}\n\tsum = 0;\n\tfor i in 1...M{\n\t\tsum += V[i]*w[i][k];\n\t}\n\tXref = k/sum;\n\tfor i in 1...M{\n\t\tX[i][k]= V[i]*Xref;\n\t\tif(ST[i] == \"D){\n\t\t\tn[i][k] = Z[i]*X[i][k];\n\t\t\tU[i][k] = n[i][k]/k;\n\t\t}\n\t\telse{\n\t\tU[i][k]=S[i]*X[i][k];\n\t\tn[i][k]=U[i][k]*(1+n[i][k-1]);\n\t\t}\n\t}\n}\n\n```","x":2570,"y":-8580,"width":620,"height":840},
		{"id":"4c392e6eef534737","type":"text","text":"## MVA for LD stations \nnot usable when the bottleneck station is load dependent.\n```\nInput -> M: int, N: int, V[i] : Array<double>, S[i]: Array<double>\nOutput -> X[i][k]: Array<Array<double>>, U[i][k]:Array<Array<double>>, n[i][k]:Array<Array<int>>, w[i][k] : Array<Array<double>>, p[i][k][n]: Array<Matrix<2,double>>\n\ncum = 0.0;wait=0.0;y=0.0\nfor i in 1...M{\n\tp[i](0,0) = 1.0;\n\tfor j in 1...N{p[i](j,0) = 0.0;}\n}\n\nfor k in 1...N{\n\tfor i in 1...M{\n\t\tfor j in 1...k{\n\t\t\twait += j * S[i][j]*p[i](j-1,k-1);\n\t\t\tw[i][k]=wait;\n\t\t}\n\t}\n\tfor i in 1...M{\n\t\tY+= V[i]*w[i][k];\n\t}\n\tXref= k/Y;\n\tfor i in 1...M{\n\t\tX[i][k] = V[i]*Xref;\n\t\tfor j in 1...k{\n\t\t\tp[i](j,k)=X[i][k]*S[i][j]*p[i](j-1,k-1);\n\t\t\tcum += p[i](j,k);\n\t\t}\n\t\tp[i](0,k) = 1.0-cum;\n\t\tu[i][k]=cum;\n\t\tn[i][k]=X[i][k]*w[i][k];\n\t}\n}\n\n\n```","x":3955,"y":-8700,"width":730,"height":880},
		{"id":"19f63ac3ff302e87","type":"text","text":"## Simplify transition rates \nthe transition rates becomes $r(\\underline{n},\\underline{n}_{ij}) = \\frac{C_{ij}(n_j)}{T_j(n_j)}$ for the one step,  $C_{ji}= C_j(n_j)q_{ij}$ for homogeneity. Overall we obtain \n$$\nr(\\underline{n},\\underline{n}_{ij}) = \n\\begin{cases}\n\\frac{q_{ji}}{S_j(n_j)} \\ \\ \\ j \\rightarrow i\\\\\n\\frac{q_{j0}}{S_j(n_j)} \\ \\ \\ j \\rightarrow 0 \\\\\n\\lambda_{0i} \\ \\ \\ 0 \\rightarrow i\n\\end{cases}\n$$\n","x":-990,"y":-3852,"width":520,"height":264,"color":"2"},
		{"id":"6ade624835c994cf","type":"text","text":"## Result\nusing the recursive expression of $p(\\underline{n})$ we obtain (no intermediary)\n$$\n\\begin{cases}\nP(\\underline{n}_{i0}) = \\lambda_iS_i(n_i+1)P(\\underline{n}) \\\\\n\\\\\nP(\\underline{n}_{0j}) = \\frac{1}{\\lambda_jS_j(n_j)}\\\\\n\\\\\nP(\\underline{n}_{ij}) = \\frac{\\lambda_iS_i(n_i+1)}{\\lambda_jS_j(n_j)}P(\\underline{n})\n\\end{cases}\n$$\n","x":-920,"y":-4500,"width":613,"height":300,"color":"2"},
		{"id":"47843eaaace05584","type":"text","text":"## Mean value analysis \nLet's group all the recurrent expression\n-  $\\overline{w}_i(n) = S_i[1+\\overline{n}_i(n-1)]$\n- $U_i(n)=X_i(n)S_i$ \n- $\\overline{n}_i(n)= U_i(n)[1+\\overline{n}_i(n-1)]$ \nThe missing $X_i$ equation can be derived by using the little's law \n- $X_{ref}(n)= \\frac{n}{\\sum^{M}_{j=1}V_j \\overline{w_j}(n)}$ (derived from the definition of $Y_k(n)$)   \n- $X_i(n)= V_i X_{ref}(n)$ \n","x":1407,"y":-7620,"width":688,"height":320,"color":"1"},
		{"id":"32e85f7af7bc55e0","type":"text","text":"## Mean value analysis with delay stations\nin the case of delay station $\\overline{w}_i(n)= Z$ always. The algorithm can so modified observing that \n- $\\overline{w}_i(n)= \\begin{cases}Z_i \\ \\ \\ delay\\ station \\\\ S_i[1+\\overline{n}_i(n-1)] \\ \\ \\ LI \\  station \\end{cases}$  \n- $\\overline{n}_i(n)= \\begin{cases}Z_iX_i(n) \\ \\ \\ Delay \\ Station \\\\ U_i(n)[1+\\overline{n}_i(n-1)] \\ \\ \\  LI \\end{cases}$ \n- $U_i(n)= \\begin{cases}\\frac{\\overline{n}_i(n)}{n} \\ \\ \\ DI \\\\ X_i(n)S_i \\ \\ \\ LI \\end{cases}$ \n","x":2520,"y":-7605,"width":720,"height":290,"color":"1"},
		{"id":"2534d2556ecf65f8","type":"text","text":"## Mean value analysis with  Load dependent stations\n\nconsider the expression for the queue length distribution $p_m(k,n)= f_m(k)\\frac{g(n-k,m-1)}{g(n,m)}$ , recall: the explicit expression of the service function $f_m(k)=V_mS_m(k)f_m(k-1)$  and throughput $X_m(n)= V_m \\frac{g(n-1,m)}{g(n,m)}$  , substituting in the expression of queue length distribution we obtain  $p_m(k,n)= X_m(n)S_m(k)p_m(k-1,n-1)$ (intermediate passage omitted). since expression of $X_m$ hold for any index i we can use that expression for any index. The new recursive expression let us to obtain: \n\n- $\\overline{w}_i(n) = \\frac{\\overline{n}_i}{X_i(n)} = \\frac{\\sum^{n}_{k=1}kp_i(k,n)}{X_i(n)} = \\sum^{n}_{k=1}kS_i(k)p_i(k-1,n-1)$ latter passage with queue length distribution \n- $X_{ref}(n)= \\frac{n}{\\sum^{M}_{j=1}V_j \\overline{w}_j(n)}$ \n- $X_i(n)= V_iX_{ref}(n)$ \n- $\\overline{n}_i(n)=\\overline{w}_i(n) * X_i(n)$ \n- $p_i(k,n)= X_i(n)S_i(k)p_i(k-1,n-1)$\n- $p_i(0,n)= 1- \\sum^{n}_{k=1}p_i(k,n)$ \n- $U_i(n)= 1-p_i(0,n)= \\sum^{n}_{k=1}p_i(k,n)$ \n\nembedding these equation is easy, at each step the queue can be computed as $p_i(0,n)=1.0-U_i(n)$  and is initialized $p(0,0)=1.0$ ","x":3860,"y":-7707,"width":920,"height":494,"color":"1"},
		{"id":"372b330737fc6f7b","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Basic quantities","x":-780,"y":40,"width":766,"height":655,"color":"1"},
		{"id":"a2f17c2529b46a8a","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Little's formula","x":320,"y":89,"width":740,"height":557,"color":"1"},
		{"id":"82fa675c8f4cced3","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Network of queue","x":-814,"y":1093,"width":800,"height":506,"color":"1"},
		{"id":"f4650f79d98d9468","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Response time Open","x":1700,"y":1510,"width":800,"height":270,"color":"1"},
		{"id":"86bda41fa4e1e2b2","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Response time","x":600,"y":1183,"width":800,"height":327,"color":"1"},
		{"id":"4e0cae4cd012120f","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Response time Closed","x":1700,"y":630,"width":800,"height":587,"color":"1"},
		{"id":"7d15031b93bb2975","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Closed system with delay station","x":2720,"y":604,"width":800,"height":640,"color":"1"},
		{"id":"6577cddc2ab01100","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Bottleneck Analysis","x":-980,"y":2320,"width":674,"height":180,"color":"3"},
		{"id":"627bf119fc445d00","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#load dependency","x":-1840,"y":146,"width":674,"height":443,"color":"1"},
		{"id":"9093cf0015b096e3","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#load dependent behaviour for queues","x":-1860,"y":2149,"width":674,"height":351,"color":"1"},
		{"id":"64f30f7adf0428a2","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Beyond $ lambda_{max}$ (asymptotic analysis)","x":-1003,"y":3549,"width":720,"height":540,"color":"1"},
		{"id":"78f5bfb5b337c470","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Bottleneck Analysis open systems","x":-943,"y":2779,"width":600,"height":560,"color":"1"},
		{"id":"09e59c38118a99a7","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Bottleneck Analysis closed systems","x":-1786,"y":2854,"width":600,"height":410,"color":"1"},
		{"id":"3f095ff1cd7665f2","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Asymptotic analysis for closed systems","x":-1786,"y":3549,"width":600,"height":410,"color":"1"},
		{"id":"8a4066524f8e3788","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Bottleneck analysis case with load dependent behaviour","x":-2680,"y":2779,"width":600,"height":485,"color":"1"},
		{"id":"226b3ee2992c6c69","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Case of queues with load dependent behaviour","x":-2680,"y":3604,"width":600,"height":274,"color":"1"},
		{"id":"ff00de0b3abecd91","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Case of infinite server","x":-3760,"y":2624,"width":766,"height":795,"color":"1"},
		{"id":"7ba10d4143bcda02","type":"text","text":"## a grahical analysis\n![[Pasted image 20231004122927.png]]\nthe slanted asymptote intersect the ordinate axis at -Z the abscissa at $N_T^*=\\frac{Z}{V_bS_b}$ .  The horizontal asymptote at the saturation point $N^*=\\frac{Z}{V_bS_b} + \\frac{R(1)}{V_bS_b} = N_T^* +N_S^*$ .\nwhere $N^*_T$ is the average number of thinking terminals in saturation condition. \n$N_S^* = \\frac{R_0(1)}{V_bS_b}= \\frac{\\sum^{i=1}_{M}{V_iS_i}}{V_bS_b}$ represent the minimum number of terminals that has to be connected in order to observe queueing in the Central server.  ","x":-3735,"y":3719,"width":717,"height":480,"color":"2"},
		{"id":"efe263d1b0e0d0e9","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Customer quantities","x":320,"y":-320,"width":740,"height":209,"color":"1"},
		{"id":"174e2f4e2b90a88a","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Intermediate state","x":-790,"y":-1120,"width":740,"height":209,"color":"5"},
		{"id":"cf89fdbc77761461","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#State balance of a single queue","x":-1100,"y":-2155,"width":740,"height":400,"color":"3"},
		{"id":"b1bdb581ef599fc8","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#State balance measures","x":-1100,"y":-2571,"width":740,"height":264,"color":"3"},
		{"id":"dd093aa1b43a0d70","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Balance equations","x":420,"y":-2874,"width":740,"height":871,"color":"3"},
		{"id":"b6e56ce5826dc568","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Solution load dependent rates","x":1720,"y":-3007,"width":620,"height":375,"color":"3"},
		{"id":"9659caa7fd3c4b1d","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Asymptotic homogeneous performance indices","x":1720,"y":-1830,"width":620,"height":380,"color":"3"},
		{"id":"48fc02b2569b5440","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Solution homogeneous","x":1720,"y":-2278,"width":620,"height":238,"color":"3"},
		{"id":"a2a4b3b8cdd6a2cf","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Generalization","x":2720,"y":-2638,"width":620,"height":360,"color":"5"},
		{"id":"093eb7151795066d","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Infinite server queue","x":3560,"y":-3078,"width":620,"height":360,"color":"1"},
		{"id":"3b50c44b5967aa26","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Multiple server queue","x":3560,"y":-2638,"width":620,"height":360,"color":"1"},
		{"id":"2f2e890a01953fb8","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#queue with a finite waiting room","x":3560,"y":-2178,"width":620,"height":360,"color":"1"},
		{"id":"1ccaf4b935c2d8a2","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Single queue with fixed number of customers","x":3560,"y":-1738,"width":620,"height":360,"color":"1"},
		{"id":"725be56ff3048b6b","type":"file","file":"SIMMOD/Notes/Operational analysis.md","subpath":"#Discouraged arrivals","x":3560,"y":-3518,"width":620,"height":360,"color":"1"}
	],
	"edges":[
		{"id":"bb8074c5c8ab9f43","fromNode":"efe263d1b0e0d0e9","fromSide":"bottom","toNode":"a2f17c2529b46a8a","toSide":"top"},
		{"id":"90f86241c18cabef","fromNode":"f79be80e8176bda7","fromSide":"top","toNode":"e1d6a29195272637","toSide":"bottom"},
		{"id":"87dab3de71b71119","fromNode":"e1d6a29195272637","fromSide":"left","toNode":"c9ee6b214af165d0","toSide":"right"},
		{"id":"beeb2bca70b52ec4","fromNode":"e1d6a29195272637","fromSide":"top","toNode":"bbb014c791db1aed","toSide":"bottom"},
		{"id":"9799855bdfffb2e5","fromNode":"faf4fe857eb34de7","fromSide":"left","toNode":"bbb014c791db1aed","toSide":"right"},
		{"id":"9e622b050f01be4c","fromNode":"bbb014c791db1aed","fromSide":"top","toNode":"ff2051be11566f1f","toSide":"bottom"},
		{"id":"9fe34c7e7cf6ca66","fromNode":"ff2051be11566f1f","fromSide":"right","toNode":"19f63ac3ff302e87","toSide":"left"},
		{"id":"4c2ad0ebf5233700","fromNode":"faf4fe857eb34de7","fromSide":"top","toNode":"19f63ac3ff302e87","toSide":"bottom"},
		{"id":"040ce8abe79d4092","fromNode":"19f63ac3ff302e87","fromSide":"right","toNode":"b83ea790bafa9577","toSide":"left"},
		{"id":"bf78d666e15000c8","fromNode":"b83ea790bafa9577","fromSide":"top","toNode":"ae28ccf4bec6f2cc","toSide":"bottom"},
		{"id":"2cdace3909b33ec9","fromNode":"ae28ccf4bec6f2cc","fromSide":"left","toNode":"6ade624835c994cf","toSide":"right"},
		{"id":"fd7840d82cd08bd4","fromNode":"aa245bd273c53851","fromSide":"left","toNode":"6b98a192f01ea1d6","toSide":"right"},
		{"id":"fc47f9c0e7c52db3","fromNode":"ae28ccf4bec6f2cc","fromSide":"right","toNode":"d2d0757ccb12add6","toSide":"left"},
		{"id":"ba76ec3e30722c68","fromNode":"ae28ccf4bec6f2cc","fromSide":"right","toNode":"96a3e3bf2f758aa4","toSide":"left"},
		{"id":"9e2a84361e50bebc","fromNode":"d2d0757ccb12add6","fromSide":"top","toNode":"96a3e3bf2f758aa4","toSide":"bottom"},
		{"id":"26cb71f798f4e470","fromNode":"96a3e3bf2f758aa4","fromSide":"top","toNode":"a9f7caa576607007","toSide":"bottom"},
		{"id":"d2c3a200f0c383ef","fromNode":"a9f7caa576607007","fromSide":"top","toNode":"c3c7a5fe5ac5216d","toSide":"bottom"},
		{"id":"8d5a15ab9c588a4a","fromNode":"c3c7a5fe5ac5216d","fromSide":"right","toNode":"82028708709b698f","toSide":"left"},
		{"id":"4a79984b821a46ad","fromNode":"aa245bd273c53851","fromSide":"top","toNode":"12fc9f901d5acd3a","toSide":"bottom"},
		{"id":"7fd5711b18929fb7","fromNode":"c3c7a5fe5ac5216d","fromSide":"top","toNode":"2ba219e79a4bca20","toSide":"bottom"},
		{"id":"183daffad6ddc570","fromNode":"2ba219e79a4bca20","fromSide":"top","toNode":"47843eaaace05584","toSide":"bottom"},
		{"id":"192f02699600efc3","fromNode":"47843eaaace05584","fromSide":"top","toNode":"c6b513b281a028cf","toSide":"bottom"},
		{"id":"28c1a15ed0fef137","fromNode":"47843eaaace05584","fromSide":"right","toNode":"32e85f7af7bc55e0","toSide":"left"},
		{"id":"e4ddb874e27cc418","fromNode":"32e85f7af7bc55e0","fromSide":"top","toNode":"6077b63e1364d508","toSide":"bottom"},
		{"id":"28626988a4548549","fromNode":"c6b513b281a028cf","fromSide":"right","toNode":"6077b63e1364d508","toSide":"left"},
		{"id":"dacd1cc692324338","fromNode":"32e85f7af7bc55e0","fromSide":"right","toNode":"2534d2556ecf65f8","toSide":"left"},
		{"id":"1945ce2a175d2c19","fromNode":"2534d2556ecf65f8","fromSide":"top","toNode":"4c392e6eef534737","toSide":"bottom"},
		{"id":"59dd7817ae14baa9","fromNode":"6ade624835c994cf","fromSide":"left","toNode":"aa245bd273c53851","toSide":"right"},
		{"id":"6ac97db4f0a5fa2d","fromNode":"12fc9f901d5acd3a","fromSide":"top","toNode":"2534d2556ecf65f8","toSide":"bottom"},
		{"id":"482c8d048bda5a92","fromNode":"ae28ccf4bec6f2cc","fromSide":"top","toNode":"5a778c5710a88148","toSide":"bottom"},
		{"id":"23b8ab98a643040a","fromNode":"627bf119fc445d00","fromSide":"bottom","toNode":"9093cf0015b096e3","toSide":"top"},
		{"id":"d293a3b92b31c5e7","fromNode":"372b330737fc6f7b","fromSide":"left","toNode":"627bf119fc445d00","toSide":"right"},
		{"id":"61935b585b8f7fc1","fromNode":"372b330737fc6f7b","fromSide":"right","toNode":"a2f17c2529b46a8a","toSide":"left"},
		{"id":"0de29a4103beea75","fromNode":"372b330737fc6f7b","fromSide":"bottom","toNode":"82fa675c8f4cced3","toSide":"top"},
		{"id":"c8907ec9d7768ef8","fromNode":"a2f17c2529b46a8a","fromSide":"bottom","toNode":"82fa675c8f4cced3","toSide":"top"},
		{"id":"44b9be2e3fdb2625","fromNode":"86bda41fa4e1e2b2","fromSide":"right","toNode":"4e0cae4cd012120f","toSide":"left"},
		{"id":"0c049772f43e45e3","fromNode":"86bda41fa4e1e2b2","fromSide":"right","toNode":"f4650f79d98d9468","toSide":"left"},
		{"id":"324f484f3336ee23","fromNode":"82fa675c8f4cced3","fromSide":"right","toNode":"86bda41fa4e1e2b2","toSide":"left"},
		{"id":"fc73a09b8baa512d","fromNode":"4e0cae4cd012120f","fromSide":"right","toNode":"7d15031b93bb2975","toSide":"left"},
		{"id":"fbe29b8b47d20f64","fromNode":"6577cddc2ab01100","fromSide":"bottom","toNode":"78f5bfb5b337c470","toSide":"top"},
		{"id":"50f8063453fd3585","fromNode":"9093cf0015b096e3","fromSide":"bottom","toNode":"78f5bfb5b337c470","toSide":"top"},
		{"id":"0ad8ffc2727d1259","fromNode":"78f5bfb5b337c470","fromSide":"bottom","toNode":"64f30f7adf0428a2","toSide":"top"},
		{"id":"62601ef76fc23260","fromNode":"6577cddc2ab01100","fromSide":"bottom","toNode":"09e59c38118a99a7","toSide":"top"},
		{"id":"3be9c56bdd4c64a4","fromNode":"09e59c38118a99a7","fromSide":"bottom","toNode":"3f095ff1cd7665f2","toSide":"top"},
		{"id":"57cea035ee02308d","fromNode":"9093cf0015b096e3","fromSide":"bottom","toNode":"8a4066524f8e3788","toSide":"top"},
		{"id":"ac8ee260bd4db49b","fromNode":"8a4066524f8e3788","fromSide":"bottom","toNode":"226b3ee2992c6c69","toSide":"top"},
		{"id":"0f9f6b31b0c2b94e","fromNode":"8a4066524f8e3788","fromSide":"left","toNode":"ff00de0b3abecd91","toSide":"right"},
		{"id":"fc31e6d070773e70","fromNode":"ff00de0b3abecd91","fromSide":"bottom","toNode":"7ba10d4143bcda02","toSide":"top"},
		{"id":"63e6e90b1041948e","fromNode":"372b330737fc6f7b","fromSide":"top","toNode":"174e2f4e2b90a88a","toSide":"bottom"},
		{"id":"9e94a41a409c60d6","fromNode":"174e2f4e2b90a88a","fromSide":"top","toNode":"f79be80e8176bda7","toSide":"bottom"},
		{"id":"d4de4d6732959ef3","fromNode":"174e2f4e2b90a88a","fromSide":"top","toNode":"cf89fdbc77761461","toSide":"bottom"},
		{"id":"f196c8226b85e841","fromNode":"cf89fdbc77761461","fromSide":"top","toNode":"b1bdb581ef599fc8","toSide":"bottom"},
		{"id":"c732cbc1f7263dd3","fromNode":"b1bdb581ef599fc8","fromSide":"top","toNode":"faf4fe857eb34de7","toSide":"bottom"},
		{"id":"18e2c4b304e71ef7","fromNode":"b1bdb581ef599fc8","fromSide":"right","toNode":"dd093aa1b43a0d70","toSide":"left"},
		{"id":"0e5b217b0ff4eecb","fromNode":"dd093aa1b43a0d70","fromSide":"right","toNode":"b6e56ce5826dc568","toSide":"left"},
		{"id":"625b2f99c23278e8","fromNode":"dd093aa1b43a0d70","fromSide":"right","toNode":"48fc02b2569b5440","toSide":"left"},
		{"id":"db2cd501b5313a72","fromNode":"48fc02b2569b5440","fromSide":"bottom","toNode":"9659caa7fd3c4b1d","toSide":"top"},
		{"id":"ed086c9ff93faf1a","fromNode":"48fc02b2569b5440","fromSide":"right","toNode":"a2a4b3b8cdd6a2cf","toSide":"left"},
		{"id":"59437dc324589a0c","fromNode":"b6e56ce5826dc568","fromSide":"right","toNode":"a2a4b3b8cdd6a2cf","toSide":"left"},
		{"id":"db4049646a643d72","fromNode":"a2a4b3b8cdd6a2cf","fromSide":"right","toNode":"725be56ff3048b6b","toSide":"left"},
		{"id":"99c8a706ccd93101","fromNode":"a2a4b3b8cdd6a2cf","fromSide":"right","toNode":"093eb7151795066d","toSide":"left"},
		{"id":"500b1897f4328a83","fromNode":"a2a4b3b8cdd6a2cf","fromSide":"right","toNode":"3b50c44b5967aa26","toSide":"left"},
		{"id":"05a1637f98cce1e2","fromNode":"a2a4b3b8cdd6a2cf","fromSide":"right","toNode":"2f2e890a01953fb8","toSide":"left"},
		{"id":"92bf783b742b98f4","fromNode":"a2a4b3b8cdd6a2cf","fromSide":"right","toNode":"1ccaf4b935c2d8a2","toSide":"left"}
	]
}